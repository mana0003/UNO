# Coverage data, format version: 3.0
# Statement data:
# - id
# - source path
# - package name
# - class name
# - class type (Class, Object or Trait)
# - full class name
# - method name
# - start offset
# - end offset
# - line number
# - symbol name
# - tree name
# - is branch
# - invocations count
# - is ignored
# - description (can be multi-line)
# '' sign
# ------------------------------------------
0
src\\main\\scala\\Main.scala
<empty>
Main$
Object
<empty>.Main$
main
143
151
7
$lessinit$greater$default$1
Select
false
0
false
UnoField

1
src\\main\\scala\\Main.scala
<empty>
Main$
Object
<empty>.Main$
main
143
151
7
$lessinit$greater$default$2
Select
false
0
false
UnoField

2
src\\main\\scala\\Main.scala
<empty>
Main$
Object
<empty>.Main$
main
143
151
7
$lessinit$greater$default$3
Select
false
0
false
UnoField

3
src\\main\\scala\\Main.scala
<empty>
Main$
Object
<empty>.Main$
main
176
200
8
<init>
Apply
false
0
false
new UnoController(field)

4
src\\main\\scala\\Main.scala
<empty>
Main$
Object
<empty>.Main$
main
249
268
11
<init>
Apply
false
0
false
new TUI(controller)

5
src\\main\\scala\\Main.scala
<empty>
Main$
Object
<empty>.Main$
main
274
315
12
start
Apply
false
0
false
new Thread(() => tui.startGame()).start()

6
src\\main\\scala\\Main.scala
<empty>
Main$
Object
<empty>.Main$
main
274
307
12
<init>
Apply
false
0
false
new Thread(() => tui.startGame())

7
src\\main\\scala\\Main.scala
<empty>
Main$
Object
<empty>.Main$
$anonfun
291
306
12
startGame
Apply
false
0
false
tui.startGame()

8
src\\main\\scala\\Main.scala
<empty>
Main$
Object
<empty>.Main$
main
321
349
13
launchApp
Apply
false
0
false
UnoGUI.launchApp(controller)

9
src\\main\\scala\\Main.scala
<empty>
Main$
Object
<empty>.Main$
main
86
94
6
main
DefDef
false
0
false
def main

10
src\\main\\scala\\controller\\DrawCommand.scala
controller
DrawCommand
Class
controller.DrawCommand
execute
350
969
13
apply
Apply
false
0
false
Try {\r\n    previousState = Some(controller.field) // Save the current game state\r\n    val newCard = randomCard // Draw a random card\r\n    drawnCard = Some(newCard) // Save the drawn card for redo\r\n\r\n    val currentPlayer = controller.field.players(controller.field.currentPlayer)\r\n    val updatedPlayer = currentPlayer.copy(hand = currentPlayer.hand.addCard(newCard))\r\n\r\n    val updatedPlayers = controller.field.players.updated(\r\n      controller.field.currentPlayer,\r\n      updatedPlayer\r\n    )\r\n\r\n    controller.field = controller.field.copy(players = updatedPlayers)\r\n    controller.notifyObservers(Event.Draw)\r\n  }

11
src\\main\\scala\\controller\\DrawCommand.scala
controller
DrawCommand
Class
controller.DrawCommand
execute
450
460
15
randomCard
Ident
false
0
false
randomCard

12
src\\main\\scala\\controller\\DrawCommand.scala
controller
DrawCommand
Class
controller.DrawCommand
execute
573
629
18
apply
Apply
false
0
false
controller.field.players(controller.field.currentPlayer)

13
src\\main\\scala\\controller\\DrawCommand.scala
controller
DrawCommand
Class
controller.DrawCommand
execute
681
716
19
addCard
Apply
false
0
false
currentPlayer.hand.addCard(newCard)

14
src\\main\\scala\\controller\\DrawCommand.scala
controller
DrawCommand
Class
controller.DrawCommand
execute
746
846
21
updated
Apply
false
0
false
controller.field.players.updated(\r\n      controller.field.currentPlayer,\r\n      updatedPlayer\r\n    )

15
src\\main\\scala\\controller\\DrawCommand.scala
controller
DrawCommand
Class
controller.DrawCommand
execute
926
964
27
notifyObservers
Apply
false
0
false
controller.notifyObservers(Event.Draw)

16
src\\main\\scala\\controller\\DrawCommand.scala
controller
DrawCommand
Class
controller.DrawCommand
execute
314
334
13
execute
DefDef
false
0
false
override def execute

17
src\\main\\scala\\controller\\DrawCommand.scala
controller
DrawCommand
Class
controller.DrawCommand
undo
1035
1051
31
<none>
Block
false
0
false
case Some(state)

18
src\\main\\scala\\controller\\DrawCommand.scala
controller
DrawCommand
Class
controller.DrawCommand
undo
1062
1190
32
apply
Apply
false
0
false
Try {\r\n        controller.field = state // Revert to the previous state\r\n        controller.notifyObservers(Event.Undo)\r\n      }

19
src\\main\\scala\\controller\\DrawCommand.scala
controller
DrawCommand
Class
controller.DrawCommand
undo
1143
1181
34
notifyObservers
Apply
false
0
false
controller.notifyObservers(Event.Undo)

20
src\\main\\scala\\controller\\DrawCommand.scala
controller
DrawCommand
Class
controller.DrawCommand
undo
1196
1205
36
<none>
Block
false
0
false
case None

21
src\\main\\scala\\controller\\DrawCommand.scala
controller
DrawCommand
Class
controller.DrawCommand
undo
1217
1265
36
<init>
Apply
false
0
false
new IllegalStateException("No state to undo to")

22
src\\main\\scala\\controller\\DrawCommand.scala
controller
DrawCommand
Class
controller.DrawCommand
undo
975
992
30
undo
DefDef
false
0
false
override def undo

23
src\\main\\scala\\controller\\DrawCommand.scala
controller
DrawCommand
Class
controller.DrawCommand
redo
1310
1859
39
apply
Apply
false
0
false
Try {\r\n    if (drawnCard.isEmpty) throw new IllegalStateException("No card to redo drawing")\r\n    val newCard = drawnCard.get\r\n\r\n    val currentPlayer = controller.field.players(controller.field.currentPlayer)\r\n    val updatedPlayer = currentPlayer.copy(hand = currentPlayer.hand.addCard(newCard))\r\n\r\n    val updatedPlayers = controller.field.players.updated(\r\n      controller.field.currentPlayer,\r\n      updatedPlayer\r\n    )\r\n\r\n    controller.field = controller.field.copy(players = updatedPlayers)\r\n    controller.notifyObservers(Event.Redo)\r\n  }

24
src\\main\\scala\\controller\\DrawCommand.scala
controller
DrawCommand
Class
controller.DrawCommand
redo
1325
1342
40
isEmpty
Select
false
0
false
drawnCard.isEmpty

25
src\\main\\scala\\controller\\DrawCommand.scala
controller
DrawCommand
Class
controller.DrawCommand
redo
1344
1402
40
throw
Apply
false
0
false
throw new IllegalStateException("No card to redo drawing")

26
src\\main\\scala\\controller\\DrawCommand.scala
controller
DrawCommand
Class
controller.DrawCommand
redo
1350
1402
40
<init>
Apply
false
0
false
new IllegalStateException("No card to redo drawing")

27
src\\main\\scala\\controller\\DrawCommand.scala
controller
DrawCommand
Class
controller.DrawCommand
redo
1344
1402
40
throw
Apply
true
0
false
throw new IllegalStateException("No card to redo drawing")

28
src\\main\\scala\\controller\\DrawCommand.scala
controller
DrawCommand
Class
controller.DrawCommand
redo
1422
1435
41
get
Select
false
0
false
drawnCard.get

29
src\\main\\scala\\controller\\DrawCommand.scala
controller
DrawCommand
Class
controller.DrawCommand
redo
1463
1519
43
apply
Apply
false
0
false
controller.field.players(controller.field.currentPlayer)

30
src\\main\\scala\\controller\\DrawCommand.scala
controller
DrawCommand
Class
controller.DrawCommand
redo
1571
1606
44
addCard
Apply
false
0
false
currentPlayer.hand.addCard(newCard)

31
src\\main\\scala\\controller\\DrawCommand.scala
controller
DrawCommand
Class
controller.DrawCommand
redo
1636
1736
46
updated
Apply
false
0
false
controller.field.players.updated(\r\n      controller.field.currentPlayer,\r\n      updatedPlayer\r\n    )

32
src\\main\\scala\\controller\\DrawCommand.scala
controller
DrawCommand
Class
controller.DrawCommand
redo
1816
1854
52
notifyObservers
Apply
false
0
false
controller.notifyObservers(Event.Redo)

33
src\\main\\scala\\controller\\DrawCommand.scala
controller
DrawCommand
Class
controller.DrawCommand
redo
1277
1294
39
redo
DefDef
false
0
false
override def redo

34
src\\main\\scala\\controller\\PlayCommand.scala
controller
PlayCommand
Class
controller.PlayCommand
execute
316
1143
12
apply
Apply
false
0
false
Try {\r\n    previousState = Some(controller.field) // Save the current game state\r\n\r\n    val currentPlayer = controller.field.players(controller.field.currentPlayer)\r\n\r\n    if (!card.canBePlayedOn(controller.field.topCard)) {\r\n      throw new IllegalArgumentException("Card cannot be played on the current top card")\r\n    }\r\n\r\n    val updatedPlayer = currentPlayer.copy(hand = currentPlayer.hand.removeCard(card))\r\n    val updatedPlayers = controller.field.players.updated(\r\n      controller.field.currentPlayer,\r\n      updatedPlayer\r\n    )\r\n\r\n    val nextPlayer = (controller.field.currentPlayer + 1) % controller.field.players.length\r\n    controller.field = controller.field.copy(\r\n      players = updatedPlayers,\r\n      topCard = card,\r\n      currentPlayer = nextPlayer\r\n    )\r\n    controller.notifyObservers(Event.Play)\r\n  }

35
src\\main\\scala\\controller\\PlayCommand.scala
controller
PlayCommand
Class
controller.PlayCommand
execute
424
480
15
apply
Apply
false
0
false
controller.field.players(controller.field.currentPlayer)

36
src\\main\\scala\\controller\\PlayCommand.scala
controller
PlayCommand
Class
controller.PlayCommand
execute
493
537
17
canBePlayedOn
Apply
false
0
false
card.canBePlayedOn(controller.field.topCard)

37
src\\main\\scala\\controller\\PlayCommand.scala
controller
PlayCommand
Class
controller.PlayCommand
execute
548
631
18
throw
Apply
false
0
false
throw new IllegalArgumentException("Card cannot be played on the current top card")

38
src\\main\\scala\\controller\\PlayCommand.scala
controller
PlayCommand
Class
controller.PlayCommand
execute
554
631
18
<init>
Apply
false
0
false
new IllegalArgumentException("Card cannot be played on the current top card")

39
src\\main\\scala\\controller\\PlayCommand.scala
controller
PlayCommand
Class
controller.PlayCommand
execute
539
638
17
<none>
Block
true
0
false
{\r\n      throw new IllegalArgumentException("Card cannot be played on the current top card")\r\n    }

40
src\\main\\scala\\controller\\PlayCommand.scala
controller
PlayCommand
Class
controller.PlayCommand
execute
692
727
21
removeCard
Apply
false
0
false
currentPlayer.hand.removeCard(card)

41
src\\main\\scala\\controller\\PlayCommand.scala
controller
PlayCommand
Class
controller.PlayCommand
execute
755
855
22
updated
Apply
false
0
false
controller.field.players.updated(\r\n      controller.field.currentPlayer,\r\n      updatedPlayer\r\n    )

42
src\\main\\scala\\controller\\PlayCommand.scala
controller
PlayCommand
Class
controller.PlayCommand
execute
919
950
27
length
Select
false
0
false
controller.field.players.length

43
src\\main\\scala\\controller\\PlayCommand.scala
controller
PlayCommand
Class
controller.PlayCommand
execute
1100
1138
33
notifyObservers
Apply
false
0
false
controller.notifyObservers(Event.Play)

44
src\\main\\scala\\controller\\PlayCommand.scala
controller
PlayCommand
Class
controller.PlayCommand
execute
280
300
12
execute
DefDef
false
0
false
override def execute

45
src\\main\\scala\\controller\\PlayCommand.scala
controller
PlayCommand
Class
controller.PlayCommand
undo
1209
1225
37
<none>
Block
false
0
false
case Some(state)

46
src\\main\\scala\\controller\\PlayCommand.scala
controller
PlayCommand
Class
controller.PlayCommand
undo
1236
1364
38
apply
Apply
false
0
false
Try {\r\n        controller.field = state // Revert to the previous state\r\n        controller.notifyObservers(Event.Undo)\r\n      }

47
src\\main\\scala\\controller\\PlayCommand.scala
controller
PlayCommand
Class
controller.PlayCommand
undo
1317
1355
40
notifyObservers
Apply
false
0
false
controller.notifyObservers(Event.Undo)

48
src\\main\\scala\\controller\\PlayCommand.scala
controller
PlayCommand
Class
controller.PlayCommand
undo
1370
1379
42
<none>
Block
false
0
false
case None

49
src\\main\\scala\\controller\\PlayCommand.scala
controller
PlayCommand
Class
controller.PlayCommand
undo
1391
1439
42
<init>
Apply
false
0
false
new IllegalStateException("No state to undo to")

50
src\\main\\scala\\controller\\PlayCommand.scala
controller
PlayCommand
Class
controller.PlayCommand
undo
1149
1166
36
undo
DefDef
false
0
false
override def undo

51
src\\main\\scala\\controller\\PlayCommand.scala
controller
PlayCommand
Class
controller.PlayCommand
redo
1484
2231
45
apply
Apply
false
0
false
Try {\r\n    val currentPlayer = controller.field.players(controller.field.currentPlayer)\r\n\r\n    if (!card.canBePlayedOn(controller.field.topCard)) {\r\n      throw new IllegalStateException("Card cannot be redone on the current top card")\r\n    }\r\n\r\n    val updatedPlayer = currentPlayer.copy(hand = currentPlayer.hand.removeCard(card))\r\n    val updatedPlayers = controller.field.players.updated(\r\n      controller.field.currentPlayer,\r\n      updatedPlayer\r\n    )\r\n\r\n    val nextPlayer = (controller.field.currentPlayer + 1) % controller.field.players.length\r\n    controller.field = controller.field.copy(\r\n      players = updatedPlayers,\r\n      topCard = card,\r\n      currentPlayer = nextPlayer\r\n    )\r\n    controller.notifyObservers(Event.Redo)\r\n  }

52
src\\main\\scala\\controller\\PlayCommand.scala
controller
PlayCommand
Class
controller.PlayCommand
redo
1515
1571
46
apply
Apply
false
0
false
controller.field.players(controller.field.currentPlayer)

53
src\\main\\scala\\controller\\PlayCommand.scala
controller
PlayCommand
Class
controller.PlayCommand
redo
1584
1628
48
canBePlayedOn
Apply
false
0
false
card.canBePlayedOn(controller.field.topCard)

54
src\\main\\scala\\controller\\PlayCommand.scala
controller
PlayCommand
Class
controller.PlayCommand
redo
1639
1719
49
throw
Apply
false
0
false
throw new IllegalStateException("Card cannot be redone on the current top card")

55
src\\main\\scala\\controller\\PlayCommand.scala
controller
PlayCommand
Class
controller.PlayCommand
redo
1645
1719
49
<init>
Apply
false
0
false
new IllegalStateException("Card cannot be redone on the current top card")

56
src\\main\\scala\\controller\\PlayCommand.scala
controller
PlayCommand
Class
controller.PlayCommand
redo
1630
1726
48
<none>
Block
true
0
false
{\r\n      throw new IllegalStateException("Card cannot be redone on the current top card")\r\n    }

57
src\\main\\scala\\controller\\PlayCommand.scala
controller
PlayCommand
Class
controller.PlayCommand
redo
1780
1815
52
removeCard
Apply
false
0
false
currentPlayer.hand.removeCard(card)

58
src\\main\\scala\\controller\\PlayCommand.scala
controller
PlayCommand
Class
controller.PlayCommand
redo
1843
1943
53
updated
Apply
false
0
false
controller.field.players.updated(\r\n      controller.field.currentPlayer,\r\n      updatedPlayer\r\n    )

59
src\\main\\scala\\controller\\PlayCommand.scala
controller
PlayCommand
Class
controller.PlayCommand
redo
2007
2038
58
length
Select
false
0
false
controller.field.players.length

60
src\\main\\scala\\controller\\PlayCommand.scala
controller
PlayCommand
Class
controller.PlayCommand
redo
2188
2226
64
notifyObservers
Apply
false
0
false
controller.notifyObservers(Event.Redo)

61
src\\main\\scala\\controller\\PlayCommand.scala
controller
PlayCommand
Class
controller.PlayCommand
redo
1451
1468
45
redo
DefDef
false
0
false
override def redo

62
src\\main\\scala\\controller\\UnoActionBuilder.scala
controller
UnoActionBuilder
Class
controller.UnoActionBuilder
setAction
195
208
10
setAction
DefDef
false
0
false
def setAction

63
src\\main\\scala\\controller\\UnoActionBuilder.scala
controller
UnoActionBuilder
Class
controller.UnoActionBuilder
setCard
293
304
15
setCard
DefDef
false
0
false
def setCard

64
src\\main\\scala\\controller\\UnoActionBuilder.scala
controller
UnoActionBuilder
Class
controller.UnoActionBuilder
build
449
460
22
<none>
Block
false
0
false
case "draw"

65
src\\main\\scala\\controller\\UnoActionBuilder.scala
controller
UnoActionBuilder
Class
controller.UnoActionBuilder
build
464
484
22
<init>
Apply
false
0
false
new DrawCardStrategy

66
src\\main\\scala\\controller\\UnoActionBuilder.scala
controller
UnoActionBuilder
Class
controller.UnoActionBuilder
build
492
503
23
<none>
Block
false
0
false
case "play"

67
src\\main\\scala\\controller\\UnoActionBuilder.scala
controller
UnoActionBuilder
Class
controller.UnoActionBuilder
build
529
541
24
<none>
Block
false
0
false
case Some(c)

68
src\\main\\scala\\controller\\UnoActionBuilder.scala
controller
UnoActionBuilder
Class
controller.UnoActionBuilder
build
545
568
24
<init>
Apply
false
0
false
new PlayCardStrategy(c)

69
src\\main\\scala\\controller\\UnoActionBuilder.scala
controller
UnoActionBuilder
Class
controller.UnoActionBuilder
build
578
587
25
<none>
Block
false
0
false
case None

70
src\\main\\scala\\controller\\UnoActionBuilder.scala
controller
UnoActionBuilder
Class
controller.UnoActionBuilder
build
591
666
25
throw
Apply
false
0
false
throw new IllegalArgumentException("Card must be provided for play action")

71
src\\main\\scala\\controller\\UnoActionBuilder.scala
controller
UnoActionBuilder
Class
controller.UnoActionBuilder
build
597
666
25
<init>
Apply
false
0
false
new IllegalArgumentException("Card must be provided for play action")

72
src\\main\\scala\\controller\\UnoActionBuilder.scala
controller
UnoActionBuilder
Class
controller.UnoActionBuilder
build
683
689
27
<none>
Block
false
0
false
case _

73
src\\main\\scala\\controller\\UnoActionBuilder.scala
controller
UnoActionBuilder
Class
controller.UnoActionBuilder
build
693
750
27
throw
Apply
false
0
false
throw new IllegalArgumentException("Unknown action type")

74
src\\main\\scala\\controller\\UnoActionBuilder.scala
controller
UnoActionBuilder
Class
controller.UnoActionBuilder
build
699
750
27
<init>
Apply
false
0
false
new IllegalArgumentException("Unknown action type")

75
src\\main\\scala\\controller\\UnoActionBuilder.scala
controller
UnoActionBuilder
Class
controller.UnoActionBuilder
build
387
396
20
build
DefDef
false
0
false
def build

76
src\\main\\scala\\controller\\UnoActionBuilder.scala
controller
UnoActionFactory$
Object
controller.UnoActionFactory$
builder
832
852
33
<init>
Apply
false
0
false
new UnoActionBuilder

77
src\\main\\scala\\controller\\UnoActionBuilder.scala
controller
UnoActionFactory$
Object
controller.UnoActionFactory$
builder
798
809
33
builder
DefDef
false
0
false
def builder

78
src\\main\\scala\\controller\\UnoActionProcessor.scala
controller
UnoActionProcessor
Class
controller.UnoActionProcessor
processAction
211
253
8
validateAction
Apply
false
0
false
validateAction(controller, player, action)

79
src\\main\\scala\\controller\\UnoActionProcessor.scala
controller
UnoActionProcessor
Class
controller.UnoActionProcessor
processAction
259
299
9
handleAction
Apply
false
0
false
handleAction(controller, player, action)

80
src\\main\\scala\\controller\\UnoActionProcessor.scala
controller
UnoActionProcessor
Class
controller.UnoActionProcessor
processAction
305
347
10
completeAction
Apply
false
0
false
completeAction(controller, player, action)

81
src\\main\\scala\\controller\\UnoActionProcessor.scala
controller
UnoActionProcessor
Class
controller.UnoActionProcessor
processAction
119
136
7
processAction
DefDef
false
0
false
def processAction

82
src\\main\\scala\\controller\\UnoActionProcessor.scala
controller
UnoActionProcessor
Class
controller.UnoActionProcessor
validateAction
451
514
14
println
Apply
false
0
false
println(s"Validating action: $action for player: ${player.id}")

83
src\\main\\scala\\controller\\UnoActionProcessor.scala
controller
UnoActionProcessor
Class
controller.UnoActionProcessor
validateAction
459
513
14
s
Apply
false
0
false
s"Validating action: $action for player: ${player.id}"

84
src\\main\\scala\\controller\\UnoActionProcessor.scala
controller
UnoActionProcessor
Class
controller.UnoActionProcessor
validateAction
542
553
16
<none>
Block
false
0
false
case "play"

85
src\\main\\scala\\controller\\UnoActionProcessor.scala
controller
UnoActionProcessor
Class
controller.UnoActionProcessor
validateAction
619
657
18
valid
Apply
false
0
false
player.valid(controller.field.topCard)

86
src\\main\\scala\\controller\\UnoActionProcessor.scala
controller
UnoActionProcessor
Class
controller.UnoActionProcessor
validateAction
672
728
19
throw
Apply
false
0
false
throw new IllegalArgumentException("Card does not fit.")

87
src\\main\\scala\\controller\\UnoActionProcessor.scala
controller
UnoActionProcessor
Class
controller.UnoActionProcessor
validateAction
678
728
19
<init>
Apply
false
0
false
new IllegalArgumentException("Card does not fit.")

88
src\\main\\scala\\controller\\UnoActionProcessor.scala
controller
UnoActionProcessor
Class
controller.UnoActionProcessor
validateAction
659
739
18
<none>
Block
true
0
false
{\r\n          throw new IllegalArgumentException("Card does not fit.")\r\n        }

89
src\\main\\scala\\controller\\UnoActionProcessor.scala
controller
UnoActionProcessor
Class
controller.UnoActionProcessor
validateAction
747
753
21
<none>
Block
false
0
false
case _

90
src\\main\\scala\\controller\\UnoActionProcessor.scala
controller
UnoActionProcessor
Class
controller.UnoActionProcessor
validateAction
766
823
22
throw
Apply
false
0
false
throw new IllegalArgumentException("Unknown action type")

91
src\\main\\scala\\controller\\UnoActionProcessor.scala
controller
UnoActionProcessor
Class
controller.UnoActionProcessor
validateAction
772
823
22
<init>
Apply
false
0
false
new IllegalArgumentException("Unknown action type")

92
src\\main\\scala\\controller\\UnoActionProcessor.scala
controller
UnoActionProcessor
Class
controller.UnoActionProcessor
validateAction
358
376
13
validateAction
DefDef
false
0
false
def validateAction

93
src\\main\\scala\\controller\\UnoActionProcessor.scala
controller
UnoActionProcessor
Class
controller.UnoActionProcessor
completeAction
934
997
27
println
Apply
false
0
false
println(s"Completing action: $action for player: ${player.id}")

94
src\\main\\scala\\controller\\UnoActionProcessor.scala
controller
UnoActionProcessor
Class
controller.UnoActionProcessor
completeAction
942
996
27
s
Apply
false
0
false
s"Completing action: $action for player: ${player.id}"

95
src\\main\\scala\\controller\\UnoActionProcessor.scala
controller
UnoActionProcessor
Class
controller.UnoActionProcessor
completeAction
1025
1036
29
<none>
Block
false
0
false
case "draw"

96
src\\main\\scala\\controller\\UnoActionProcessor.scala
controller
UnoActionProcessor
Class
controller.UnoActionProcessor
completeAction
1105
1143
31
notifyObservers
Apply
false
0
false
controller.notifyObservers(Event.Draw)

97
src\\main\\scala\\controller\\UnoActionProcessor.scala
controller
UnoActionProcessor
Class
controller.UnoActionProcessor
completeAction
1151
1162
32
<none>
Block
false
0
false
case "play"

98
src\\main\\scala\\controller\\UnoActionProcessor.scala
controller
UnoActionProcessor
Class
controller.UnoActionProcessor
completeAction
1232
1270
34
notifyObservers
Apply
false
0
false
controller.notifyObservers(Event.Play)

99
src\\main\\scala\\controller\\UnoActionProcessor.scala
controller
UnoActionProcessor
Class
controller.UnoActionProcessor
completeAction
1278
1284
35
<none>
Block
false
0
false
case _

100
src\\main\\scala\\controller\\UnoActionProcessor.scala
controller
UnoActionProcessor
Class
controller.UnoActionProcessor
completeAction
1297
1354
36
throw
Apply
false
0
false
throw new IllegalArgumentException("Unknown action type")

101
src\\main\\scala\\controller\\UnoActionProcessor.scala
controller
UnoActionProcessor
Class
controller.UnoActionProcessor
completeAction
1303
1354
36
<init>
Apply
false
0
false
new IllegalArgumentException("Unknown action type")

102
src\\main\\scala\\controller\\UnoActionProcessor.scala
controller
UnoActionProcessor
Class
controller.UnoActionProcessor
completeAction
841
859
26
completeAction
DefDef
false
0
false
def completeAction

103
src\\main\\scala\\controller\\UnoActionProcessor.scala
controller
ConcreteUnoActionProcessor
Class
controller.ConcreteUnoActionProcessor
handleAction
1639
1691
45
build
Apply
false
0
false
UnoActionFactory.builder().setAction(action).build()

104
src\\main\\scala\\controller\\UnoActionProcessor.scala
controller
ConcreteUnoActionProcessor
Class
controller.ConcreteUnoActionProcessor
handleAction
1639
1683
45
setAction
Apply
false
0
false
UnoActionFactory.builder().setAction(action)

105
src\\main\\scala\\controller\\UnoActionProcessor.scala
controller
ConcreteUnoActionProcessor
Class
controller.ConcreteUnoActionProcessor
handleAction
1639
1665
45
builder
Apply
false
0
false
UnoActionFactory.builder()

106
src\\main\\scala\\controller\\UnoActionProcessor.scala
controller
ConcreteUnoActionProcessor
Class
controller.ConcreteUnoActionProcessor
handleAction
1697
1738
46
executeAction
Apply
false
0
false
handler.executeAction(controller, player)

107
src\\main\\scala\\controller\\UnoActionProcessor.scala
controller
ConcreteUnoActionProcessor
Class
controller.ConcreteUnoActionProcessor
handleAction
1525
1550
44
handleAction
DefDef
false
0
false
override def handleAction

108
src\\main\\scala\\controller\\UnoActionStrategy.scala
controller
DrawCardStrategy
Class
controller.DrawCardStrategy
executeAction
330
367
12
println
Apply
false
0
false
println(s"${player.id} draws a card")

109
src\\main\\scala\\controller\\UnoActionStrategy.scala
controller
DrawCardStrategy
Class
controller.DrawCardStrategy
executeAction
338
366
12
s
Apply
false
0
false
s"${player.id} draws a card"

110
src\\main\\scala\\controller\\UnoActionStrategy.scala
controller
DrawCardStrategy
Class
controller.DrawCardStrategy
executeAction
373
390
13
draw
Apply
false
0
false
controller.draw()

111
src\\main\\scala\\controller\\UnoActionStrategy.scala
controller
DrawCardStrategy
Class
controller.DrawCardStrategy
executeAction
245
271
11
executeAction
DefDef
false
0
false
override def executeAction

112
src\\main\\scala\\controller\\UnoActionStrategy.scala
controller
PlayCardStrategy
Class
controller.PlayCardStrategy
executeAction
553
590
19
println
Apply
false
0
false
println(s"${player.id} plays a card")

113
src\\main\\scala\\controller\\UnoActionStrategy.scala
controller
PlayCardStrategy
Class
controller.PlayCardStrategy
executeAction
561
589
19
s
Apply
false
0
false
s"${player.id} plays a card"

114
src\\main\\scala\\controller\\UnoActionStrategy.scala
controller
PlayCardStrategy
Class
controller.PlayCardStrategy
executeAction
596
617
20
play
Apply
false
0
false
controller.play(card)

115
src\\main\\scala\\controller\\UnoActionStrategy.scala
controller
PlayCardStrategy
Class
controller.PlayCardStrategy
executeAction
468
494
18
executeAction
DefDef
false
0
false
override def executeAction

116
src\\main\\scala\\controller\\UnoActionStrategy.scala
controller
UnoActionHandler
Class
controller.UnoActionHandler
setStrategy
690
705
25
setStrategy
DefDef
false
0
false
def setStrategy

117
src\\main\\scala\\controller\\UnoActionStrategy.scala
controller
UnoActionHandler
Class
controller.UnoActionHandler
executeStrategy
863
905
30
executeAction
Apply
false
0
false
strategy.executeAction(controller, player)

118
src\\main\\scala\\controller\\UnoActionStrategy.scala
controller
UnoActionHandler
Class
controller.UnoActionHandler
executeStrategy
785
804
29
executeStrategy
DefDef
false
0
false
def executeStrategy

119
src\\main\\scala\\controller\\UnoController.scala
controller
UnoController
Class
controller.UnoController
<init>
296
316
12
<init>
Apply
false
0
false
new CommandManager()

120
src\\main\\scala\\controller\\UnoController.scala
controller
UnoController
Class
controller.UnoController
setGuiActive
366
382
15
setGuiActive
DefDef
false
0
false
def setGuiActive

121
src\\main\\scala\\controller\\UnoController.scala
controller
UnoController
Class
controller.UnoController
isGuiMode
446
459
19
isGuiMode
DefDef
false
0
false
def isGuiMode

122
src\\main\\scala\\controller\\UnoController.scala
controller
UnoController
Class
controller.UnoController
play
538
565
22
<init>
Apply
false
0
false
new PlayCommand(this, card)

123
src\\main\\scala\\controller\\UnoController.scala
controller
UnoController
Class
controller.UnoController
play
571
601
23
doStep
Apply
false
0
false
commandManager.doStep(command)

124
src\\main\\scala\\controller\\UnoController.scala
controller
UnoController
Class
controller.UnoController
play
617
632
24
<none>
Block
false
0
false
case Success(_)

125
src\\main\\scala\\controller\\UnoController.scala
controller
UnoController
Class
controller.UnoController
play
645
738
25
println
Apply
false
0
false
println(s"Player ${field.currentPlayer + 1} played: ${card.getColorCode}${card.value}$RESET")

126
src\\main\\scala\\controller\\UnoController.scala
controller
UnoController
Class
controller.UnoController
play
653
737
25
s
Apply
false
0
false
s"Player ${field.currentPlayer + 1} played: ${card.getColorCode}${card.value}$RESET"

127
src\\main\\scala\\controller\\UnoController.scala
controller
UnoController
Class
controller.UnoController
play
699
716
25
getColorCode
Select
false
0
false
card.getColorCode

128
src\\main\\scala\\controller\\UnoController.scala
controller
UnoController
Class
controller.UnoController
play
731
736
25
RESET
Ident
false
0
false
RESET

129
src\\main\\scala\\controller\\UnoController.scala
controller
UnoController
Class
controller.UnoController
play
748
910
26
println
Apply
false
0
false
println(s"Player ${field.currentPlayer + 1} hand: ${field.players(field.currentPlayer).hand.cards.map(c => s"${c.getColorCode}${c.value}$RESET").mkString(", ")}")

130
src\\main\\scala\\controller\\UnoController.scala
controller
UnoController
Class
controller.UnoController
play
756
909
26
s
Apply
false
0
false
s"Player ${field.currentPlayer + 1} hand: ${field.players(field.currentPlayer).hand.cards.map(c => s"${c.getColorCode}${c.value}$RESET").mkString(", ")}"

131
src\\main\\scala\\controller\\UnoController.scala
controller
UnoController
Class
controller.UnoController
play
800
907
26
mkString
Apply
false
0
false
field.players(field.currentPlayer).hand.cards.map(c => s"${c.getColorCode}${c.value}$RESET").mkString(", ")

132
src\\main\\scala\\controller\\UnoController.scala
controller
UnoController
Class
controller.UnoController
play
800
892
26
map
Apply
false
0
false
field.players(field.currentPlayer).hand.cards.map(c => s"${c.getColorCode}${c.value}$RESET")

133
src\\main\\scala\\controller\\UnoController.scala
controller
UnoController
Class
controller.UnoController
play
800
834
26
apply
Apply
false
0
false
field.players(field.currentPlayer)

134
src\\main\\scala\\controller\\UnoController.scala
controller
UnoController
Class
controller.UnoController
$anonfun
855
891
26
s
Apply
false
0
false
s"${c.getColorCode}${c.value}$RESET"

135
src\\main\\scala\\controller\\UnoController.scala
controller
UnoController
Class
controller.UnoController
$anonfun
859
873
26
getColorCode
Select
false
0
false
c.getColorCode

136
src\\main\\scala\\controller\\UnoController.scala
controller
UnoController
Class
controller.UnoController
$anonfun
885
890
26
RESET
Ident
false
0
false
RESET

137
src\\main\\scala\\controller\\UnoController.scala
controller
UnoController
Class
controller.UnoController
play
920
947
27
notifyObservers
Apply
false
0
false
notifyObservers(Event.Play)

138
src\\main\\scala\\controller\\UnoController.scala
controller
UnoController
Class
controller.UnoController
play
955
978
28
<none>
Block
false
0
false
case Failure(exception)

139
src\\main\\scala\\controller\\UnoController.scala
controller
UnoController
Class
controller.UnoController
play
991
1019
29
notifyObservers
Apply
false
0
false
notifyObservers(Event.Error)

140
src\\main\\scala\\controller\\UnoController.scala
controller
UnoController
Class
controller.UnoController
play
488
496
21
play
DefDef
false
0
false
def play

141
src\\main\\scala\\controller\\UnoController.scala
controller
UnoController
Class
controller.UnoController
draw
1077
1098
34
<init>
Apply
false
0
false
new DrawCommand(this)

142
src\\main\\scala\\controller\\UnoController.scala
controller
UnoController
Class
controller.UnoController
draw
1104
1134
35
doStep
Apply
false
0
false
commandManager.doStep(command)

143
src\\main\\scala\\controller\\UnoController.scala
controller
UnoController
Class
controller.UnoController
draw
1150
1165
36
<none>
Block
false
0
false
case Success(_)

144
src\\main\\scala\\controller\\UnoController.scala
controller
UnoController
Class
controller.UnoController
draw
1178
1205
37
notifyObservers
Apply
false
0
false
notifyObservers(Event.Draw)

145
src\\main\\scala\\controller\\UnoController.scala
controller
UnoController
Class
controller.UnoController
draw
1213
1236
38
<none>
Block
false
0
false
case Failure(exception)

146
src\\main\\scala\\controller\\UnoController.scala
controller
UnoController
Class
controller.UnoController
draw
1249
1277
39
notifyObservers
Apply
false
0
false
notifyObservers(Event.Error)

147
src\\main\\scala\\controller\\UnoController.scala
controller
UnoController
Class
controller.UnoController
draw
1037
1045
33
draw
DefDef
false
0
false
def draw

148
src\\main\\scala\\controller\\UnoController.scala
controller
UnoController
Class
controller.UnoController
undo
1321
1344
44
undoStep
Select
false
0
false
commandManager.undoStep

149
src\\main\\scala\\controller\\UnoController.scala
controller
UnoController
Class
controller.UnoController
undo
1360
1375
45
<none>
Block
false
0
false
case Success(_)

150
src\\main\\scala\\controller\\UnoController.scala
controller
UnoController
Class
controller.UnoController
undo
1388
1415
46
notifyObservers
Apply
false
0
false
notifyObservers(Event.Undo)

151
src\\main\\scala\\controller\\UnoController.scala
controller
UnoController
Class
controller.UnoController
undo
1423
1438
47
<none>
Block
false
0
false
case Failure(_)

152
src\\main\\scala\\controller\\UnoController.scala
controller
UnoController
Class
controller.UnoController
undo
1451
1479
48
notifyObservers
Apply
false
0
false
notifyObservers(Event.Error)

153
src\\main\\scala\\controller\\UnoController.scala
controller
UnoController
Class
controller.UnoController
undo
1295
1303
43
undo
DefDef
false
0
false
def undo

154
src\\main\\scala\\controller\\UnoController.scala
controller
UnoController
Class
controller.UnoController
redo
1523
1546
53
redoStep
Select
false
0
false
commandManager.redoStep

155
src\\main\\scala\\controller\\UnoController.scala
controller
UnoController
Class
controller.UnoController
redo
1562
1577
54
<none>
Block
false
0
false
case Success(_)

156
src\\main\\scala\\controller\\UnoController.scala
controller
UnoController
Class
controller.UnoController
redo
1590
1617
55
notifyObservers
Apply
false
0
false
notifyObservers(Event.Redo)

157
src\\main\\scala\\controller\\UnoController.scala
controller
UnoController
Class
controller.UnoController
redo
1625
1640
56
<none>
Block
false
0
false
case Failure(_)

158
src\\main\\scala\\controller\\UnoController.scala
controller
UnoController
Class
controller.UnoController
redo
1653
1681
57
notifyObservers
Apply
false
0
false
notifyObservers(Event.Error)

159
src\\main\\scala\\controller\\UnoController.scala
controller
UnoController
Class
controller.UnoController
redo
1497
1505
52
redo
DefDef
false
0
false
def redo

160
src\\main\\scala\\controller\\UnoController.scala
controller
UnoController
Class
controller.UnoController
startGame
1730
1758
62
notifyObservers
Apply
false
0
false
notifyObservers(Event.Start)

161
src\\main\\scala\\controller\\UnoController.scala
controller
UnoController
Class
controller.UnoController
startGame
1699
1712
61
startGame
DefDef
false
0
false
def startGame

162
src\\main\\scala\\model\\Card.scala
model
Card
Class
model.Card
canBePlayedOn
553
570
36
canBePlayedOn
DefDef
false
0
false
def canBePlayedOn

163
src\\main\\scala\\model\\Card.scala
model
Card
Class
model.Card
getColorCode
1216
1282
53
<none>
Block
false
0
false
case Card(_, cardValues.WILD) | Card(_, cardValues.WILD_DRAW_FOUR)

164
src\\main\\scala\\model\\Card.scala
model
Card
Class
model.Card
getColorCode
1305
1333
54
<none>
Block
false
0
false
case Card(cardColors.RED, _)

165
src\\main\\scala\\model\\Card.scala
model
Card
Class
model.Card
getColorCode
1354
1384
55
<none>
Block
false
0
false
case Card(cardColors.GREEN, _)

166
src\\main\\scala\\model\\Card.scala
model
Card
Class
model.Card
getColorCode
1407
1438
56
<none>
Block
false
0
false
case Card(cardColors.YELLOW, _)

167
src\\main\\scala\\model\\Card.scala
model
Card
Class
model.Card
getColorCode
1462
1491
57
<none>
Block
false
0
false
case Card(cardColors.BLUE, _)

168
src\\main\\scala\\model\\Card.scala
model
Card
Class
model.Card
getColorCode
1163
1179
51
getColorCode
DefDef
false
0
false
def getColorCode

169
src\\main\\scala\\model\\Card.scala
model
Card$package$
Object
model.Card$package$
randomColor
1545
1622
63
apply
Apply
false
0
false
cardColors.values.toList(scala.util.Random.nextInt(cardColors.values.length))

170
src\\main\\scala\\model\\Card.scala
model
Card$package$
Object
model.Card$package$
randomColor
1545
1562
63
wrapRefArray
Apply
false
0
false
cardColors.values

171
src\\main\\scala\\model\\Card.scala
model
Card$package$
Object
model.Card$package$
randomColor
1545
1569
63
toList
Select
false
0
false
cardColors.values.toList

172
src\\main\\scala\\model\\Card.scala
model
Card$package$
Object
model.Card$package$
randomColor
1570
1621
63
nextInt
Apply
false
0
false
scala.util.Random.nextInt(cardColors.values.length)

173
src\\main\\scala\\model\\Card.scala
model
Card$package$
Object
model.Card$package$
randomColor
1596
1620
63
length
Select
false
0
false
cardColors.values.length

174
src\\main\\scala\\model\\Card.scala
model
Card$package$
Object
model.Card$package$
randomColor
1524
1539
62
randomColor
DefDef
false
0
false
def randomColor

175
src\\main\\scala\\model\\Card.scala
model
Card$package$
Object
model.Card$package$
randomValue
1647
1724
66
apply
Apply
false
0
false
cardValues.values.toList(scala.util.Random.nextInt(cardValues.values.length))

176
src\\main\\scala\\model\\Card.scala
model
Card$package$
Object
model.Card$package$
randomValue
1647
1664
66
wrapRefArray
Apply
false
0
false
cardValues.values

177
src\\main\\scala\\model\\Card.scala
model
Card$package$
Object
model.Card$package$
randomValue
1647
1671
66
toList
Select
false
0
false
cardValues.values.toList

178
src\\main\\scala\\model\\Card.scala
model
Card$package$
Object
model.Card$package$
randomValue
1672
1723
66
nextInt
Apply
false
0
false
scala.util.Random.nextInt(cardValues.values.length)

179
src\\main\\scala\\model\\Card.scala
model
Card$package$
Object
model.Card$package$
randomValue
1698
1722
66
length
Select
false
0
false
cardValues.values.length

180
src\\main\\scala\\model\\Card.scala
model
Card$package$
Object
model.Card$package$
randomValue
1626
1641
65
randomValue
DefDef
false
0
false
def randomValue

181
src\\main\\scala\\model\\Card.scala
model
Card$package$
Object
model.Card$package$
randomCard
1750
1761
68
randomColor
Ident
false
0
false
randomColor

182
src\\main\\scala\\model\\Card.scala
model
Card$package$
Object
model.Card$package$
randomCard
1763
1774
68
randomValue
Ident
false
0
false
randomValue

183
src\\main\\scala\\model\\Card.scala
model
Card$package$
Object
model.Card$package$
randomCard
1728
1742
68
randomCard
DefDef
false
0
false
def randomCard

184
src\\main\\scala\\model\\Card.scala
model
Card$package$
Object
model.Card$package$
randomCards
1822
1854
71
map
Apply
false
0
false
(0 until i).map(_ => randomCard)

185
src\\main\\scala\\model\\Card.scala
model
Card$package$
Object
model.Card$package$
randomCards
1823
1832
71
until
Apply
false
0
false
0 until i

186
src\\main\\scala\\model\\Card.scala
model
Card$package$
Object
model.Card$package$
randomCards
1823
1824
71
intWrapper
Apply
false
0
false
0

187
src\\main\\scala\\model\\Card.scala
model
Card$package$
Object
model.Card$package$
$anonfun
1843
1853
71
randomCard
Ident
false
0
false
randomCard

188
src\\main\\scala\\model\\Card.scala
model
Card$package$
Object
model.Card$package$
randomCards
1822
1861
71
toList
Select
false
0
false
(0 until i).map(_ => randomCard).toList

189
src\\main\\scala\\model\\Card.scala
model
Card$package$
Object
model.Card$package$
randomCards
1779
1794
70
randomCards
DefDef
false
0
false
def randomCards

190
src\\main\\scala\\model\\Player.scala
model
Player
Class
model.Player
valid
251
291
11
exists
Apply
false
0
false
hand.cards.exists(_.canBePlayedOn(card))

191
src\\main\\scala\\model\\Player.scala
model
Player
Class
model.Player
$anonfun
269
290
11
canBePlayedOn
Apply
false
0
false
_.canBePlayedOn(card)

192
src\\main\\scala\\model\\Player.scala
model
Player
Class
model.Player
valid
211
220
10
valid
DefDef
false
0
false
def valid

193
src\\main\\scala\\model\\Player.scala
model
Player
Class
model.Player
play
349
360
15
valid
Apply
false
0
false
valid(card)

194
src\\main\\scala\\model\\Player.scala
model
Player
Class
model.Player
play
390
411
16
removeCard
Apply
false
0
false
hand.removeCard(card)

195
src\\main\\scala\\model\\Player.scala
model
Player
Class
model.Player
play
362
420
15
<none>
Block
true
0
false
{\r\n      Success(Player(id, hand.removeCard(card)))\r\n    }

196
src\\main\\scala\\model\\Player.scala
model
Player
Class
model.Player
play
443
485
18
<init>
Apply
false
0
false
IllegalArgumentException("Illeagal move.")

197
src\\main\\scala\\model\\Player.scala
model
Player
Class
model.Player
play
426
493
17
<none>
Block
true
0
false
{\r\n      Failure(IllegalArgumentException("Illeagal move."))\r\n    }

198
src\\main\\scala\\model\\Player.scala
model
Player
Class
model.Player
play
302
310
14
play
DefDef
false
0
false
def play

199
src\\main\\scala\\model\\PlayerHand.scala
model
PlayerHand
Class
model.PlayerHand
addCard
145
158
3
::
Apply
false
0
false
card :: cards

200
src\\main\\scala\\model\\PlayerHand.scala
model
PlayerHand
Class
model.PlayerHand
addCard
94
105
3
addCard
DefDef
false
0
false
def addCard

201
src\\main\\scala\\model\\PlayerHand.scala
model
PlayerHand
Class
model.PlayerHand
removeCard
219
240
5
diff
Apply
false
0
false
cards diff List(card)

202
src\\main\\scala\\model\\PlayerHand.scala
model
PlayerHand
Class
model.PlayerHand
removeCard
230
240
5
apply
Apply
false
0
false
List(card)

203
src\\main\\scala\\model\\PlayerHand.scala
model
PlayerHand
Class
model.PlayerHand
removeCard
230
234
5
List
Ident
false
0
false
List

204
src\\main\\scala\\model\\PlayerHand.scala
model
PlayerHand
Class
model.PlayerHand
removeCard
165
179
5
removeCard
DefDef
false
0
false
def removeCard

205
src\\main\\scala\\model\\PlayerHand.scala
model
PlayerHand$
Object
model.PlayerHand$
$lessinit$greater$default$1
73
87
2
randomCards
Apply
false
0
false
randomCards(5)

206
src\\main\\scala\\model\\PlayerHand.scala
model
PlayerHand$
Object
model.PlayerHand$
$lessinit$greater$default$1
73
73
2
$lessinit$greater$default$1
DefDef
false
0
false


207
src\\main\\scala\\model\\UnoField.scala
model
UnoField$
Object
model.UnoField$
$lessinit$greater$default$1
104
149
4
map
Apply
false
0
false
(0 until 2).map(i => Player(i, PlayerHand()))

208
src\\main\\scala\\model\\UnoField.scala
model
UnoField$
Object
model.UnoField$
$lessinit$greater$default$1
105
114
4
until
Apply
false
0
false
0 until 2

209
src\\main\\scala\\model\\UnoField.scala
model
UnoField$
Object
model.UnoField$
$lessinit$greater$default$1
105
106
4
intWrapper
Apply
false
0
false
0

210
src\\main\\scala\\model\\UnoField.scala
model
UnoField$
Object
model.UnoField$
$anonfun
135
145
4
$lessinit$greater$default$1
Select
false
0
false
PlayerHand

211
src\\main\\scala\\model\\UnoField.scala
model
UnoField$
Object
model.UnoField$
$lessinit$greater$default$1
104
156
4
toList
Select
false
0
false
(0 until 2).map(i => Player(i, PlayerHand())).toList

212
src\\main\\scala\\model\\UnoField.scala
model
UnoField$
Object
model.UnoField$
$lessinit$greater$default$1
104
104
4
$lessinit$greater$default$1
DefDef
false
0
false


213
src\\main\\scala\\model\\UnoField.scala
model
UnoField$
Object
model.UnoField$
$lessinit$greater$default$2
200
210
5
randomCard
Ident
false
0
false
randomCard

214
src\\main\\scala\\model\\UnoField.scala
model
UnoField$
Object
model.UnoField$
$lessinit$greater$default$2
200
200
5
$lessinit$greater$default$2
DefDef
false
0
false


215
src\\main\\scala\\model\\UnoField.scala
model
UnoField$
Object
model.UnoField$
$lessinit$greater$default$3
259
259
6
$lessinit$greater$default$3
DefDef
false
0
false


216
src\\main\\scala\\util\\CommandManager.scala
util
CommandManager
Class
util.CommandManager
<init>
126
129
5
Nil
Ident
false
0
false
Nil

217
src\\main\\scala\\util\\CommandManager.scala
util
CommandManager
Class
util.CommandManager
<init>
172
175
6
Nil
Ident
false
0
false
Nil

218
src\\main\\scala\\util\\CommandManager.scala
util
CommandManager
Class
util.CommandManager
doStep
243
260
9
execute
Apply
false
0
false
command.execute()

219
src\\main\\scala\\util\\CommandManager.scala
util
CommandManager
Class
util.CommandManager
doStep
288
303
11
<none>
Block
false
0
false
case Success(_)

220
src\\main\\scala\\util\\CommandManager.scala
util
CommandManager
Class
util.CommandManager
doStep
328
348
12
::
Apply
false
0
false
command :: undoStack

221
src\\main\\scala\\util\\CommandManager.scala
util
CommandManager
Class
util.CommandManager
doStep
370
373
13
Nil
Ident
false
0
false
Nil

222
src\\main\\scala\\util\\CommandManager.scala
util
CommandManager
Class
util.CommandManager
doStep
425
440
14
<none>
Block
false
0
false
case Failure(_)

223
src\\main\\scala\\util\\CommandManager.scala
util
CommandManager
Class
util.CommandManager
doStep
181
191
8
doStep
DefDef
false
0
false
def doStep

224
src\\main\\scala\\util\\CommandManager.scala
util
CommandManager
Class
util.CommandManager
undoStep
545
553
21
<none>
Block
false
0
false
case Nil

225
src\\main\\scala\\util\\CommandManager.scala
util
CommandManager
Class
util.CommandManager
undoStep
565
614
21
<init>
Apply
false
0
false
new NoSuchElementException("No commands to undo")

226
src\\main\\scala\\util\\CommandManager.scala
util
CommandManager
Class
util.CommandManager
undoStep
623
640
22
<none>
Block
false
0
false
case head :: tail

227
src\\main\\scala\\util\\CommandManager.scala
util
CommandManager
Class
util.CommandManager
undoStep
666
677
23
undo
Apply
false
0
false
head.undo()

228
src\\main\\scala\\util\\CommandManager.scala
util
CommandManager
Class
util.CommandManager
undoStep
713
728
25
<none>
Block
false
0
false
case Success(_)

229
src\\main\\scala\\util\\CommandManager.scala
util
CommandManager
Class
util.CommandManager
undoStep
787
804
27
::
Apply
false
0
false
head :: redoStack

230
src\\main\\scala\\util\\CommandManager.scala
util
CommandManager
Class
util.CommandManager
undoStep
816
831
28
<none>
Block
false
0
false
case Failure(_)

231
src\\main\\scala\\util\\CommandManager.scala
util
CommandManager
Class
util.CommandManager
undoStep
487
499
19
undoStep
DefDef
false
0
false
def undoStep

232
src\\main\\scala\\util\\CommandManager.scala
util
CommandManager
Class
util.CommandManager
redoStep
951
959
36
<none>
Block
false
0
false
case Nil

233
src\\main\\scala\\util\\CommandManager.scala
util
CommandManager
Class
util.CommandManager
redoStep
971
1020
36
<init>
Apply
false
0
false
new NoSuchElementException("No commands to redo")

234
src\\main\\scala\\util\\CommandManager.scala
util
CommandManager
Class
util.CommandManager
redoStep
1029
1046
37
<none>
Block
false
0
false
case head :: tail

235
src\\main\\scala\\util\\CommandManager.scala
util
CommandManager
Class
util.CommandManager
redoStep
1072
1086
38
execute
Apply
false
0
false
head.execute()

236
src\\main\\scala\\util\\CommandManager.scala
util
CommandManager
Class
util.CommandManager
redoStep
1122
1137
40
<none>
Block
false
0
false
case Success(_)

237
src\\main\\scala\\util\\CommandManager.scala
util
CommandManager
Class
util.CommandManager
redoStep
1196
1213
42
::
Apply
false
0
false
head :: undoStack

238
src\\main\\scala\\util\\CommandManager.scala
util
CommandManager
Class
util.CommandManager
redoStep
1225
1240
43
<none>
Block
false
0
false
case Failure(_)

239
src\\main\\scala\\util\\CommandManager.scala
util
CommandManager
Class
util.CommandManager
redoStep
893
905
34
redoStep
DefDef
false
0
false
def redoStep

240
src\\main\\scala\\util\\Observer.scala
util
Observable
Trait
util.Observable
<init>
103
111
4
apply
Apply
false
0
false
Vector()

241
src\\main\\scala\\util\\Observer.scala
util
Observable
Trait
util.Observable
<init>
103
109
4
Vector
Ident
false
0
false
Vector

242
src\\main\\scala\\util\\Observer.scala
util
Observable
Trait
util.Observable
add
160
176
6
:+
Apply
false
0
false
subscribers :+ s

243
src\\main\\scala\\util\\Observer.scala
util
Observable
Trait
util.Observable
add
117
124
6
add
DefDef
false
0
false
def add

244
src\\main\\scala\\util\\Observer.scala
util
Observable
Trait
util.Observable
remove
228
262
8
filterNot
Apply
false
0
false
subscribers.filterNot(o => o == s)

245
src\\main\\scala\\util\\Observer.scala
util
Observable
Trait
util.Observable
remove
182
192
8
remove
DefDef
false
0
false
def remove

246
src\\main\\scala\\util\\Observer.scala
util
Observable
Trait
util.Observable
notifyObservers
306
343
10
foreach
Apply
false
0
false
subscribers.foreach(o => o.update(e))

247
src\\main\\scala\\util\\Observer.scala
util
Observable
Trait
util.Observable
$anonfun
331
342
10
update
Apply
false
0
false
o.update(e)

248
src\\main\\scala\\util\\Observer.scala
util
Observable
Trait
util.Observable
notifyObservers
268
287
10
notifyObservers
DefDef
false
0
false
def notifyObservers

249
src\\main\\scala\\view\\TUI.scala
view
TUI
Class
view.TUI
<init>
249
269
10
add
Apply
false
0
false
controller.add(this)

250
src\\main\\scala\\view\\TUI.scala
view
TUI
Class
view.TUI
processInputLine
390
439
14
println
Apply
false
0
false
println("Invalid card number. Please try again.")

251
src\\main\\scala\\view\\TUI.scala
view
TUI
Class
view.TUI
processInputLine
447
461
15
gameContinue
Apply
false
0
false
gameContinue()

252
src\\main\\scala\\view\\TUI.scala
view
TUI
Class
view.TUI
processInputLine
381
468
13
<none>
Block
true
0
false
{\r\n      println("Invalid card number. Please try again.")\r\n      gameContinue()\r\n    }

253
src\\main\\scala\\view\\TUI.scala
view
TUI
Class
view.TUI
processInputLine
494
572
17
apply
Apply
false
0
false
controller.field.players(controller.field.currentPlayer).hand.cards(input - 1)

254
src\\main\\scala\\view\\TUI.scala
view
TUI
Class
view.TUI
processInputLine
494
550
17
apply
Apply
false
0
false
controller.field.players(controller.field.currentPlayer)

255
src\\main\\scala\\view\\TUI.scala
view
TUI
Class
view.TUI
processInputLine
584
652
18
valid
Apply
false
0
false
controller.field.players(controller.field.currentPlayer).valid(card)

256
src\\main\\scala\\view\\TUI.scala
view
TUI
Class
view.TUI
processInputLine
584
640
18
apply
Apply
false
0
false
controller.field.players(controller.field.currentPlayer)

257
src\\main\\scala\\view\\TUI.scala
view
TUI
Class
view.TUI
processInputLine
656
700
18
canBePlayedOn
Apply
false
0
false
card.canBePlayedOn(controller.field.topCard)

258
src\\main\\scala\\view\\TUI.scala
view
TUI
Class
view.TUI
processInputLine
713
863
19
executeAction
Apply
false
0
false
UnoActionFactory.builder().setAction("play").setCard(card).build().executeAction(controller, controller.field.players(controller.field.currentPlayer))

259
src\\main\\scala\\view\\TUI.scala
view
TUI
Class
view.TUI
processInputLine
713
779
19
build
Apply
false
0
false
UnoActionFactory.builder().setAction("play").setCard(card).build()

260
src\\main\\scala\\view\\TUI.scala
view
TUI
Class
view.TUI
processInputLine
713
771
19
setCard
Apply
false
0
false
UnoActionFactory.builder().setAction("play").setCard(card)

261
src\\main\\scala\\view\\TUI.scala
view
TUI
Class
view.TUI
processInputLine
713
757
19
setAction
Apply
false
0
false
UnoActionFactory.builder().setAction("play")

262
src\\main\\scala\\view\\TUI.scala
view
TUI
Class
view.TUI
processInputLine
713
739
19
builder
Apply
false
0
false
UnoActionFactory.builder()

263
src\\main\\scala\\view\\TUI.scala
view
TUI
Class
view.TUI
processInputLine
806
862
19
apply
Apply
false
0
false
controller.field.players(controller.field.currentPlayer)

264
src\\main\\scala\\view\\TUI.scala
view
TUI
Class
view.TUI
processInputLine
702
872
18
<none>
Block
true
0
false
{\r\n        UnoActionFactory.builder().setAction("play").setCard(card).build().executeAction(controller, controller.field.players(controller.field.currentPlayer))\r\n      }

265
src\\main\\scala\\view\\TUI.scala
view
TUI
Class
view.TUI
processInputLine
889
934
21
println
Apply
false
0
false
println("Card does not fit. Do you want to:")

266
src\\main\\scala\\view\\TUI.scala
view
TUI
Class
view.TUI
processInputLine
944
969
22
println
Apply
false
0
false
println("1. Draw a card")

267
src\\main\\scala\\view\\TUI.scala
view
TUI
Class
view.TUI
processInputLine
979
1002
23
println
Apply
false
0
false
println("2. Try again")

268
src\\main\\scala\\view\\TUI.scala
view
TUI
Class
view.TUI
processInputLine
1012
1030
24
println
Apply
false
0
false
println("3. Undo")

269
src\\main\\scala\\view\\TUI.scala
view
TUI
Class
view.TUI
processInputLine
1040
1058
25
println
Apply
false
0
false
println("4. Redo")

270
src\\main\\scala\\view\\TUI.scala
view
TUI
Class
view.TUI
processInputLine
1068
1086
26
println
Apply
false
0
false
println("5. Quit")

271
src\\main\\scala\\view\\TUI.scala
view
TUI
Class
view.TUI
processInputLine
1111
1153
27
getOrElse
Apply
false
0
false
StdIn.readLine().toIntOption.getOrElse(-1)

272
src\\main\\scala\\view\\TUI.scala
view
TUI
Class
view.TUI
processInputLine
1111
1127
27
augmentString
Apply
false
0
false
StdIn.readLine()

273
src\\main\\scala\\view\\TUI.scala
view
TUI
Class
view.TUI
processInputLine
1111
1127
27
readLine
Apply
false
0
false
StdIn.readLine()

274
src\\main\\scala\\view\\TUI.scala
view
TUI
Class
view.TUI
processInputLine
1111
1139
27
toIntOption
Select
false
0
false
StdIn.readLine().toIntOption

275
src\\main\\scala\\view\\TUI.scala
view
TUI
Class
view.TUI
processInputLine
1191
1197
29
<none>
Block
false
0
false
case 1

276
src\\main\\scala\\view\\TUI.scala
view
TUI
Class
view.TUI
processInputLine
1201
1337
29
executeAction
Apply
false
0
false
UnoActionFactory.builder().setAction("draw").build().executeAction(controller, controller.field.players(controller.field.currentPlayer))

277
src\\main\\scala\\view\\TUI.scala
view
TUI
Class
view.TUI
processInputLine
1201
1253
29
build
Apply
false
0
false
UnoActionFactory.builder().setAction("draw").build()

278
src\\main\\scala\\view\\TUI.scala
view
TUI
Class
view.TUI
processInputLine
1201
1245
29
setAction
Apply
false
0
false
UnoActionFactory.builder().setAction("draw")

279
src\\main\\scala\\view\\TUI.scala
view
TUI
Class
view.TUI
processInputLine
1201
1227
29
builder
Apply
false
0
false
UnoActionFactory.builder()

280
src\\main\\scala\\view\\TUI.scala
view
TUI
Class
view.TUI
processInputLine
1280
1336
29
apply
Apply
false
0
false
controller.field.players(controller.field.currentPlayer)

281
src\\main\\scala\\view\\TUI.scala
view
TUI
Class
view.TUI
processInputLine
1349
1355
30
<none>
Block
false
0
false
case 2

282
src\\main\\scala\\view\\TUI.scala
view
TUI
Class
view.TUI
processInputLine
1359
1373
30
gameContinue
Apply
false
0
false
gameContinue()

283
src\\main\\scala\\view\\TUI.scala
view
TUI
Class
view.TUI
processInputLine
1385
1391
31
<none>
Block
false
0
false
case 3

284
src\\main\\scala\\view\\TUI.scala
view
TUI
Class
view.TUI
processInputLine
1395
1407
31
undoAction
Apply
false
0
false
undoAction()

285
src\\main\\scala\\view\\TUI.scala
view
TUI
Class
view.TUI
processInputLine
1419
1425
32
<none>
Block
false
0
false
case 4

286
src\\main\\scala\\view\\TUI.scala
view
TUI
Class
view.TUI
processInputLine
1429
1441
32
redoAction
Apply
false
0
false
redoAction()

287
src\\main\\scala\\view\\TUI.scala
view
TUI
Class
view.TUI
processInputLine
1453
1459
33
<none>
Block
false
0
false
case 5

288
src\\main\\scala\\view\\TUI.scala
view
TUI
Class
view.TUI
processInputLine
1463
1501
33
notifyObservers
Apply
false
0
false
controller.notifyObservers(Event.Quit)

289
src\\main\\scala\\view\\TUI.scala
view
TUI
Class
view.TUI
processInputLine
1513
1519
34
<none>
Block
false
0
false
case _

290
src\\main\\scala\\view\\TUI.scala
view
TUI
Class
view.TUI
processInputLine
1536
1584
35
println
Apply
false
0
false
println("Invalid input. Please enter a number.")

291
src\\main\\scala\\view\\TUI.scala
view
TUI
Class
view.TUI
processInputLine
1598
1612
36
gameContinue
Apply
false
0
false
gameContinue()

292
src\\main\\scala\\view\\TUI.scala
view
TUI
Class
view.TUI
processInputLine
878
1632
20
<none>
Block
true
0
false
{\r\n        println("Card does not fit. Do you want to:")\r\n        println("1. Draw a card")\r\n        println("2. Try again")\r\n        println("3. Undo")\r\n        println("4. Redo")\r\n        println("5. Quit")\r\n        val readLine = StdIn.readLine().toIntOption.getOrElse(-1)\r\n        readLine match {\r\n          case 1 => UnoActionFactory.builder().setAction("draw").build().executeAction(controller, controller.field.players(controller.field.currentPlayer))\r\n          case 2 => gameContinue()\r\n          case 3 => undoAction()\r\n          case 4 => redoAction()\r\n          case 5 => controller.notifyObservers(Event.Quit)\r\n          case _ =>\r\n            println("Invalid input. Please enter a number.")\r\n            gameContinue()\r\n        }\r\n      }

293
src\\main\\scala\\view\\TUI.scala
view
TUI
Class
view.TUI
processInputLine
474
1639
16
<none>
Block
true
0
false
{\r\n      val card = controller.field.players(controller.field.currentPlayer).hand.cards(input - 1)\r\n      if (controller.field.players(controller.field.currentPlayer).valid(card) && card.canBePlayedOn(controller.field.topCard)) {\r\n        UnoActionFactory.builder().setAction("play").setCard(card).build().executeAction(controller, controller.field.players(controller.field.currentPlayer))\r\n      } else {\r\n        println("Card does not fit. Do you want to:")\r\n        println("1. Draw a card")\r\n        println("2. Try again")\r\n        println("3. Undo")\r\n        println("4. Redo")\r\n        println("5. Quit")\r\n        val readLine = StdIn.readLine().toIntOption.getOrElse(-1)\r\n        readLine match {\r\n          case 1 => UnoActionFactory.builder().setAction("draw").build().executeAction(controller, controller.field.players(controller.field.currentPlayer))\r\n          case 2 => gameContinue()\r\n          case 3 => undoAction()\r\n          case 4 => redoAction()\r\n          case 5 => controller.notifyObservers(Event.Quit)\r\n          case _ =>\r\n            println("Invalid input. Please enter a number.")\r\n            gameContinue()\r\n        }\r\n      }\r\n    }

294
src\\main\\scala\\view\\TUI.scala
view
TUI
Class
view.TUI
processInputLine
275
303
12
processInputLine
DefDef
false
0
false
private def processInputLine

295
src\\main\\scala\\view\\TUI.scala
view
TUI
Class
view.TUI
update
1699
1719
43
isGuiMode
Select
false
0
false
controller.isGuiMode

296
src\\main\\scala\\view\\TUI.scala
view
TUI
Class
view.TUI
update
1721
1743
43
<none>
Block
true
0
false
{\r\n      return\r\n    }

297
src\\main\\scala\\view\\TUI.scala
view
TUI
Class
view.TUI
update
1766
1782
47
<none>
Block
false
0
false
case Event.Start

298
src\\main\\scala\\view\\TUI.scala
view
TUI
Class
view.TUI
update
1795
1819
48
println
Apply
false
0
false
println("Game Started!")

299
src\\main\\scala\\view\\TUI.scala
view
TUI
Class
view.TUI
update
1829
1843
49
gameContinue
Apply
false
0
false
gameContinue()

300
src\\main\\scala\\view\\TUI.scala
view
TUI
Class
view.TUI
update
1851
1866
50
<none>
Block
false
0
false
case Event.Play

301
src\\main\\scala\\view\\TUI.scala
view
TUI
Class
view.TUI
update
1879
1902
51
println
Apply
false
0
false
println("Card played!")

302
src\\main\\scala\\view\\TUI.scala
view
TUI
Class
view.TUI
update
1912
1926
52
gameContinue
Apply
false
0
false
gameContinue()

303
src\\main\\scala\\view\\TUI.scala
view
TUI
Class
view.TUI
update
1934
1949
53
<none>
Block
false
0
false
case Event.Draw

304
src\\main\\scala\\view\\TUI.scala
view
TUI
Class
view.TUI
update
1962
1984
54
println
Apply
false
0
false
println("Card drawn!")

305
src\\main\\scala\\view\\TUI.scala
view
TUI
Class
view.TUI
update
1994
2008
55
gameContinue
Apply
false
0
false
gameContinue()

306
src\\main\\scala\\view\\TUI.scala
view
TUI
Class
view.TUI
update
2016
2031
56
<none>
Block
false
0
false
case Event.Undo

307
src\\main\\scala\\view\\TUI.scala
view
TUI
Class
view.TUI
update
2044
2077
57
println
Apply
false
0
false
println("Undo action performed!")

308
src\\main\\scala\\view\\TUI.scala
view
TUI
Class
view.TUI
update
2087
2101
58
gameContinue
Apply
false
0
false
gameContinue()

309
src\\main\\scala\\view\\TUI.scala
view
TUI
Class
view.TUI
update
2109
2124
59
<none>
Block
false
0
false
case Event.Redo

310
src\\main\\scala\\view\\TUI.scala
view
TUI
Class
view.TUI
update
2137
2170
60
println
Apply
false
0
false
println("Redo action performed!")

311
src\\main\\scala\\view\\TUI.scala
view
TUI
Class
view.TUI
update
2180
2194
61
gameContinue
Apply
false
0
false
gameContinue()

312
src\\main\\scala\\view\\TUI.scala
view
TUI
Class
view.TUI
update
2202
2218
62
<none>
Block
false
0
false
case Event.Error

313
src\\main\\scala\\view\\TUI.scala
view
TUI
Class
view.TUI
update
2231
2260
63
println
Apply
false
0
false
println("An error occurred!")

314
src\\main\\scala\\view\\TUI.scala
view
TUI
Class
view.TUI
update
2270
2284
64
gameContinue
Apply
false
0
false
gameContinue()

315
src\\main\\scala\\view\\TUI.scala
view
TUI
Class
view.TUI
update
2292
2307
65
<none>
Block
false
0
false
case Event.Quit

316
src\\main\\scala\\view\\TUI.scala
view
TUI
Class
view.TUI
update
2320
2330
66
gameOver
Apply
false
0
false
gameOver()

317
src\\main\\scala\\view\\TUI.scala
view
TUI
Class
view.TUI
update
1650
1669
42
update
DefDef
false
0
false
override def update

318
src\\main\\scala\\view\\TUI.scala
view
TUI
Class
view.TUI
startGame
2379
2393
71
displayField
Apply
false
0
false
displayField()

319
src\\main\\scala\\view\\TUI.scala
view
TUI
Class
view.TUI
startGame
2399
2446
72
println
Apply
false
0
false
println("Enter a number from the menu above: ")

320
src\\main\\scala\\view\\TUI.scala
view
TUI
Class
view.TUI
startGame
2467
2483
73
augmentString
Apply
false
0
false
StdIn.readLine()

321
src\\main\\scala\\view\\TUI.scala
view
TUI
Class
view.TUI
startGame
2467
2483
73
readLine
Apply
false
0
false
StdIn.readLine()

322
src\\main\\scala\\view\\TUI.scala
view
TUI
Class
view.TUI
startGame
2467
2495
73
toIntOption
Select
false
0
false
StdIn.readLine().toIntOption

323
src\\main\\scala\\view\\TUI.scala
view
TUI
Class
view.TUI
startGame
2525
2537
75
<none>
Block
false
0
false
case Some(1)

324
src\\main\\scala\\view\\TUI.scala
view
TUI
Class
view.TUI
startGame
2550
2589
76
notifyObservers
Apply
false
0
false
controller.notifyObservers(Event.Start)

325
src\\main\\scala\\view\\TUI.scala
view
TUI
Class
view.TUI
startGame
2597
2609
77
<none>
Block
false
0
false
case Some(2)

326
src\\main\\scala\\view\\TUI.scala
view
TUI
Class
view.TUI
startGame
2622
2641
78
println
Apply
false
0
false
println("Goodbye!")

327
src\\main\\scala\\view\\TUI.scala
view
TUI
Class
view.TUI
startGame
2651
2689
79
notifyObservers
Apply
false
0
false
controller.notifyObservers(Event.Quit)

328
src\\main\\scala\\view\\TUI.scala
view
TUI
Class
view.TUI
startGame
2697
2703
80
<none>
Block
false
0
false
case _

329
src\\main\\scala\\view\\TUI.scala
view
TUI
Class
view.TUI
startGame
2716
2780
81
println
Apply
false
0
false
println("Invalid input. Please enter a number between 1 and 2.")

330
src\\main\\scala\\view\\TUI.scala
view
TUI
Class
view.TUI
startGame
2790
2801
82
startGame
Apply
false
0
false
startGame()

331
src\\main\\scala\\view\\TUI.scala
view
TUI
Class
view.TUI
startGame
2348
2361
70
startGame
DefDef
false
0
false
def startGame

332
src\\main\\scala\\view\\TUI.scala
view
TUI
Class
view.TUI
gameOver
2857
2878
87
println
Apply
false
0
false
println("Game over!")

333
src\\main\\scala\\view\\TUI.scala
view
TUI
Class
view.TUI
gameOver
2902
2959
88
indexWhere
Apply
false
0
false
controller.field.players.indexWhere(_.hand.cards.isEmpty)

334
src\\main\\scala\\view\\TUI.scala
view
TUI
Class
view.TUI
$anonfun
2938
2958
88
isEmpty
Select
false
0
false
_.hand.cards.isEmpty

335
src\\main\\scala\\view\\TUI.scala
view
TUI
Class
view.TUI
gameOver
2965
3008
89
println
Apply
false
0
false
println(s"Player ${winnerIndex + 1} wins!")

336
src\\main\\scala\\view\\TUI.scala
view
TUI
Class
view.TUI
gameOver
2973
3007
89
s
Apply
false
0
false
s"Player ${winnerIndex + 1} wins!"

337
src\\main\\scala\\view\\TUI.scala
view
TUI
Class
view.TUI
gameOver
2819
2839
86
gameOver
DefDef
false
0
false
private def gameOver

338
src\\main\\scala\\view\\TUI.scala
view
TUI
Class
view.TUI
displayField
3077
3085
93
*
Apply
false
0
false
"=" * 60

339
src\\main\\scala\\view\\TUI.scala
view
TUI
Class
view.TUI
displayField
3077
3080
93
augmentString
Apply
false
0
false
"="

340
src\\main\\scala\\view\\TUI.scala
view
TUI
Class
view.TUI
displayField
3155
3194
95
apply
Apply
false
0
false
List("1. Start playing UNO", "2. Quit")

341
src\\main\\scala\\view\\TUI.scala
view
TUI
Class
view.TUI
displayField
3155
3159
95
List
Ident
false
0
false
List

342
src\\main\\scala\\view\\TUI.scala
view
TUI
Class
view.TUI
displayField
3218
3319
97
augmentString
Apply
false
0
false
s"""\r\n         |$separator\r\n         |\r\n         |$title\r\n         |\r\n         |$separator\r\n      """

343
src\\main\\scala\\view\\TUI.scala
view
TUI
Class
view.TUI
displayField
3218
3319
97
s
Apply
false
0
false
s"""\r\n         |$separator\r\n         |\r\n         |$title\r\n         |\r\n         |$separator\r\n      """

344
src\\main\\scala\\view\\TUI.scala
view
TUI
Class
view.TUI
displayField
3218
3331
103
stripMargin
Select
false
0
false
s"""\r\n         |$separator\r\n         |\r\n         |$title\r\n         |\r\n         |$separator\r\n      """.stripMargin

345
src\\main\\scala\\view\\TUI.scala
view
TUI
Class
view.TUI
displayField
3339
3352
105
println
Apply
false
0
false
println(menu)

346
src\\main\\scala\\view\\TUI.scala
view
TUI
Class
view.TUI
displayField
3358
3389
106
println
Apply
false
0
false
println(options.mkString("\\n"))

347
src\\main\\scala\\view\\TUI.scala
view
TUI
Class
view.TUI
displayField
3366
3388
106
mkString
Apply
false
0
false
options.mkString("\\n")

348
src\\main\\scala\\view\\TUI.scala
view
TUI
Class
view.TUI
displayField
3019
3043
92
displayField
DefDef
false
0
false
private def displayField

349
src\\main\\scala\\view\\TUI.scala
view
TUI
Class
view.TUI
gameContinue
3462
3518
110
apply
Apply
false
0
false
controller.field.players(controller.field.currentPlayer)

350
src\\main\\scala\\view\\TUI.scala
view
TUI
Class
view.TUI
gameContinue
3524
3596
111
println
Apply
false
0
false
println(s"Current player: Player ${controller.field.currentPlayer + 1}")

351
src\\main\\scala\\view\\TUI.scala
view
TUI
Class
view.TUI
gameContinue
3532
3595
111
s
Apply
false
0
false
s"Current player: Player ${controller.field.currentPlayer + 1}"

352
src\\main\\scala\\view\\TUI.scala
view
TUI
Class
view.TUI
gameContinue
3602
3711
112
println
Apply
false
0
false
println(s"Current top card: ${controller.field.topCard.getColorCode}${controller.field.topCard.value}$RESET")

353
src\\main\\scala\\view\\TUI.scala
view
TUI
Class
view.TUI
gameContinue
3610
3710
112
s
Apply
false
0
false
s"Current top card: ${controller.field.topCard.getColorCode}${controller.field.topCard.value}$RESET"

354
src\\main\\scala\\view\\TUI.scala
view
TUI
Class
view.TUI
gameContinue
3632
3669
112
getColorCode
Select
false
0
false
controller.field.topCard.getColorCode

355
src\\main\\scala\\view\\TUI.scala
view
TUI
Class
view.TUI
gameContinue
3704
3709
112
RESET
Ident
false
0
false
RESET

356
src\\main\\scala\\view\\TUI.scala
view
TUI
Class
view.TUI
gameContinue
3717
3866
113
foreach
Apply
false
0
false
currentPlayer.hand.cards.zipWithIndex.foreach { case (card, index) =>\r\n      println(s"${index + 1}: ${card.getColorCode}${card.value}$RESET")\r\n    }

357
src\\main\\scala\\view\\TUI.scala
view
TUI
Class
view.TUI
gameContinue
3717
3754
113
zipWithIndex
Select
false
0
false
currentPlayer.hand.cards.zipWithIndex

358
src\\main\\scala\\view\\TUI.scala
view
TUI
Class
view.TUI
$anonfun
3765
3783
113
<none>
Block
false
0
false
case (card, index)

359
src\\main\\scala\\view\\TUI.scala
view
TUI
Class
view.TUI
$anonfun
3794
3859
114
println
Apply
false
0
false
println(s"${index + 1}: ${card.getColorCode}${card.value}$RESET")

360
src\\main\\scala\\view\\TUI.scala
view
TUI
Class
view.TUI
$anonfun
3802
3858
114
s
Apply
false
0
false
s"${index + 1}: ${card.getColorCode}${card.value}$RESET"

361
src\\main\\scala\\view\\TUI.scala
view
TUI
Class
view.TUI
$anonfun
3820
3837
114
getColorCode
Select
false
0
false
card.getColorCode

362
src\\main\\scala\\view\\TUI.scala
view
TUI
Class
view.TUI
$anonfun
3852
3857
114
RESET
Ident
false
0
false
RESET

363
src\\main\\scala\\view\\TUI.scala
view
TUI
Class
view.TUI
gameContinue
3872
3929
116
println
Apply
false
0
false
println("Enter the number of the card you want to play:")

364
src\\main\\scala\\view\\TUI.scala
view
TUI
Class
view.TUI
gameContinue
3952
3968
117
augmentString
Apply
false
0
false
StdIn.readLine()

365
src\\main\\scala\\view\\TUI.scala
view
TUI
Class
view.TUI
gameContinue
3952
3968
117
readLine
Apply
false
0
false
StdIn.readLine()

366
src\\main\\scala\\view\\TUI.scala
view
TUI
Class
view.TUI
gameContinue
3952
3980
117
toIntOption
Select
false
0
false
StdIn.readLine().toIntOption

367
src\\main\\scala\\view\\TUI.scala
view
TUI
Class
view.TUI
gameContinue
3990
4008
118
isEmpty
Select
false
0
false
cardNumber.isEmpty

368
src\\main\\scala\\view\\TUI.scala
view
TUI
Class
view.TUI
gameContinue
4019
4067
119
println
Apply
false
0
false
println("Invalid input. Please enter a number.")

369
src\\main\\scala\\view\\TUI.scala
view
TUI
Class
view.TUI
gameContinue
4075
4089
120
gameContinue
Apply
false
0
false
gameContinue()

370
src\\main\\scala\\view\\TUI.scala
view
TUI
Class
view.TUI
gameContinue
4010
4096
118
<none>
Block
true
0
false
{\r\n      println("Invalid input. Please enter a number.")\r\n      gameContinue()\r\n    }

371
src\\main\\scala\\view\\TUI.scala
view
TUI
Class
view.TUI
gameContinue
4111
4176
122
processInputLine
Apply
false
0
false
processInputLine(cardNumber.get, currentPlayer.hand.cards.length)

372
src\\main\\scala\\view\\TUI.scala
view
TUI
Class
view.TUI
gameContinue
4128
4142
122
get
Select
false
0
false
cardNumber.get

373
src\\main\\scala\\view\\TUI.scala
view
TUI
Class
view.TUI
gameContinue
4144
4175
122
length
Select
false
0
false
currentPlayer.hand.cards.length

374
src\\main\\scala\\view\\TUI.scala
view
TUI
Class
view.TUI
gameContinue
4102
4183
121
<none>
Block
true
0
false
{\r\n      processInputLine(cardNumber.get, currentPlayer.hand.cards.length)\r\n    }

375
src\\main\\scala\\view\\TUI.scala
view
TUI
Class
view.TUI
gameContinue
3400
3424
109
gameContinue
DefDef
false
0
false
private def gameContinue

376
src\\main\\scala\\view\\TUI.scala
view
TUI
Class
view.TUI
undoAction
4234
4251
127
undo
Apply
false
0
false
controller.undo()

377
src\\main\\scala\\view\\TUI.scala
view
TUI
Class
view.TUI
undoAction
4257
4271
128
gameContinue
Apply
false
0
false
gameContinue()

378
src\\main\\scala\\view\\TUI.scala
view
TUI
Class
view.TUI
undoAction
4194
4216
126
undoAction
DefDef
false
0
false
private def undoAction

379
src\\main\\scala\\view\\TUI.scala
view
TUI
Class
view.TUI
redoAction
4322
4339
132
redo
Apply
false
0
false
controller.redo()

380
src\\main\\scala\\view\\TUI.scala
view
TUI
Class
view.TUI
redoAction
4345
4359
133
gameContinue
Apply
false
0
false
gameContinue()

381
src\\main\\scala\\view\\TUI.scala
view
TUI
Class
view.TUI
redoAction
4282
4304
131
redoAction
DefDef
false
0
false
private def redoAction

382
src\\main\\scala\\view\\UnoGUI.scala
view
BeginState
Class
view.BeginState
display
665
686
23
clear
Apply
false
0
false
pane.children.clear()

383
src\\main\\scala\\view\\UnoGUI.scala
view
BeginState
Class
view.BeginState
display
665
678
23
children
Select
false
0
false
pane.children

384
src\\main\\scala\\view\\UnoGUI.scala
view
BeginState
Class
view.BeginState
display
709
763
24
<init>
Apply
false
0
false
new scalafx.scene.control.Label("Welcome to UNO Game")

385
src\\main\\scala\\view\\UnoGUI.scala
view
$anon
Class
view.$anon
<init>
843
946
26
onAction_=
Apply
false
0
false
onAction = _ => {\r\n        gui.setState(new GameState(gui, controller))\r\n        gui.display()\r\n      }

386
src\\main\\scala\\view\\UnoGUI.scala
view
$anon
Class
view.$anon
$anonfun
870
914
27
setState
Apply
false
0
false
gui.setState(new GameState(gui, controller))

387
src\\main\\scala\\view\\UnoGUI.scala
view
$anon
Class
view.$anon
$anonfun
883
913
27
<init>
Apply
false
0
false
new GameState(gui, controller)

388
src\\main\\scala\\view\\UnoGUI.scala
view
$anon
Class
view.$anon
$anonfun
924
937
28
display
Apply
false
0
false
gui.display()

389
src\\main\\scala\\view\\UnoGUI.scala
view
$anon
Class
view.$anon
<init>
1011
1023
32
spacing_=
Apply
false
0
false
spacing = 20

390
src\\main\\scala\\view\\UnoGUI.scala
view
$anon
Class
view.$anon
<init>
1031
1070
33
children_=
Apply
false
0
false
children = Seq(beginLabel, startButton)

391
src\\main\\scala\\view\\UnoGUI.scala
view
$anon
Class
view.$anon
<init>
1042
1070
33
apply
Apply
false
0
false
Seq(beginLabel, startButton)

392
src\\main\\scala\\view\\UnoGUI.scala
view
$anon
Class
view.$anon
<init>
1042
1045
33
Seq
Ident
false
0
false
Seq

393
src\\main\\scala\\view\\UnoGUI.scala
view
BeginState
Class
view.BeginState
display
1083
1108
35
add
Apply
false
0
false
pane.children.add(layout)

394
src\\main\\scala\\view\\UnoGUI.scala
view
BeginState
Class
view.BeginState
display
1083
1096
35
observableBuffer2ObservableList
Apply
false
0
false
pane.children

395
src\\main\\scala\\view\\UnoGUI.scala
view
BeginState
Class
view.BeginState
display
1083
1096
35
children
Select
false
0
false
pane.children

396
src\\main\\scala\\view\\UnoGUI.scala
view
BeginState
Class
view.BeginState
display
1101
1107
35
sfxVBox2jfx
Apply
false
0
false
layout

397
src\\main\\scala\\view\\UnoGUI.scala
view
BeginState
Class
view.BeginState
display
617
637
22
display
DefDef
false
0
false
override def display

398
src\\main\\scala\\view\\UnoGUI.scala
view
GameState
Class
view.GameState
display
1243
1264
41
clear
Apply
false
0
false
pane.children.clear()

399
src\\main\\scala\\view\\UnoGUI.scala
view
GameState
Class
view.GameState
display
1243
1256
41
children
Select
false
0
false
pane.children

400
src\\main\\scala\\view\\UnoGUI.scala
view
GameState
Class
view.GameState
display
1290
1386
43
<init>
Apply
false
0
false
new scalafx.scene.control.Label(s"Current player: Player ${controller.field.currentPlayer + 1}")

401
src\\main\\scala\\view\\UnoGUI.scala
view
GameState
Class
view.GameState
display
1322
1385
43
s
Apply
false
0
false
s"Current player: Player ${controller.field.currentPlayer + 1}"

402
src\\main\\scala\\view\\UnoGUI.scala
view
$anon
Class
view.$anon
<init>
1443
1497
44
s
Apply
false
0
false
s"Current top card: ${controller.field.topCard.value}"

403
src\\main\\scala\\view\\UnoGUI.scala
view
$anon
Class
view.$anon
<init>
1508
1556
45
textFill_=
Apply
false
0
false
textFill = controller.field.topCard.getColorCode

404
src\\main\\scala\\view\\UnoGUI.scala
view
$anon
Class
view.$anon
<init>
1519
1556
45
getColorCode
Select
false
0
false
controller.field.topCard.getColorCode

405
src\\main\\scala\\view\\UnoGUI.scala
view
$anon
Class
view.$anon
<init>
1594
1608
48
$lessinit$greater$default$1
Select
false
0
false
ListView[Card]

406
src\\main\\scala\\view\\UnoGUI.scala
view
$anon
Class
view.$anon
<init>
1618
1735
49
items_=
Apply
false
0
false
items = scalafx.collections.ObservableBuffer(controller.field.players(controller.field.currentPlayer).hand.cards: _*)

407
src\\main\\scala\\view\\UnoGUI.scala
view
$anon
Class
view.$anon
<init>
1626
1735
49
apply
Apply
false
0
false
scalafx.collections.ObservableBuffer(controller.field.players(controller.field.currentPlayer).hand.cards: _*)

408
src\\main\\scala\\view\\UnoGUI.scala
view
$anon
Class
view.$anon
<init>
1663
1719
49
apply
Apply
false
0
false
controller.field.players(controller.field.currentPlayer)

409
src\\main\\scala\\view\\UnoGUI.scala
view
$anon
Class
view.$anon
<init>
1745
2199
51
cellFactory_=
Apply
false
0
false
cellFactory = new Callback[ListView[Card], ListCell[Card]] {\r\n        override def call(param: ListView[Card]): ListCell[Card] = {\r\n          new ListCell[Card] {\r\n            item.onChange { (_, _, cardOpt) =>\r\n              val cardOption = Option(cardOpt)\r\n              text = cardOption.map(_.value.toString).getOrElse("")\r\n              textFill = cardOption.map(_.getColorCode).getOrElse(Color.Pink)\r\n            }\r\n          }\r\n        }\r\n      }

410
src\\main\\scala\\view\\UnoGUI.scala
view
$anon
Class
view.$anon
<init>
1759
2199
51
jfxCallbackToFunction1
Apply
false
0
false
new Callback[ListView[Card], ListCell[Card]] {\r\n        override def call(param: ListView[Card]): ListCell[Card] = {\r\n          new ListCell[Card] {\r\n            item.onChange { (_, _, cardOpt) =>\r\n              val cardOption = Option(cardOpt)\r\n              text = cardOption.map(_.value.toString).getOrElse("")\r\n              textFill = cardOption.map(_.getColorCode).getOrElse(Color.Pink)\r\n            }\r\n          }\r\n        }\r\n      }

411
src\\main\\scala\\view\\UnoGUI.scala
view
$anon
Class
view.$anon
<init>
1891
1905
53
$lessinit$greater$default$1
Select
false
0
false
ListCell[Card]

412
src\\main\\scala\\view\\UnoGUI.scala
view
$anon
Class
view.$anon
<init>
1921
2166
54
onChange
Apply
false
0
false
item.onChange { (_, _, cardOpt) =>\r\n              val cardOption = Option(cardOpt)\r\n              text = cardOption.map(_.value.toString).getOrElse("")\r\n              textFill = cardOption.map(_.getColorCode).getOrElse(Color.Pink)\r\n            }

413
src\\main\\scala\\view\\UnoGUI.scala
view
$anon
Class
view.$anon
<init>
1921
1925
54
item
Select
false
0
false
item

414
src\\main\\scala\\view\\UnoGUI.scala
view
$anon
Class
view.$anon
$anonfun
1988
2003
55
apply
Apply
false
0
false
Option(cardOpt)

415
src\\main\\scala\\view\\UnoGUI.scala
view
$anon
Class
view.$anon
$anonfun
2019
2072
56
text_=
Apply
false
0
false
text = cardOption.map(_.value.toString).getOrElse("")

416
src\\main\\scala\\view\\UnoGUI.scala
view
$anon
Class
view.$anon
$anonfun
2026
2072
56
getOrElse
Apply
false
0
false
cardOption.map(_.value.toString).getOrElse("")

417
src\\main\\scala\\view\\UnoGUI.scala
view
$anon
Class
view.$anon
$anonfun
2026
2058
56
map
Apply
false
0
false
cardOption.map(_.value.toString)

418
src\\main\\scala\\view\\UnoGUI.scala
view
$anon
Class
view.$anon
$anonfun
2088
2151
57
textFill_=
Apply
false
0
false
textFill = cardOption.map(_.getColorCode).getOrElse(Color.Pink)

419
src\\main\\scala\\view\\UnoGUI.scala
view
$anon
Class
view.$anon
$anonfun
2099
2151
57
getOrElse
Apply
false
0
false
cardOption.map(_.getColorCode).getOrElse(Color.Pink)

420
src\\main\\scala\\view\\UnoGUI.scala
view
$anon
Class
view.$anon
$anonfun
2099
2129
57
map
Apply
false
0
false
cardOption.map(_.getColorCode)

421
src\\main\\scala\\view\\UnoGUI.scala
view
$anon
Class
view.$anon
$anonfun
2114
2128
57
getColorCode
Select
false
0
false
_.getColorCode

422
src\\main\\scala\\view\\UnoGUI.scala
view
$anon
Class
view.$anon
call
1815
1832
52
call
DefDef
false
0
false
override def call

423
src\\main\\scala\\view\\UnoGUI.scala
view
$anon
Class
view.$anon
<init>
2286
2411
65
onAction_=
Apply
false
0
false
onAction = _ => {\r\n        controller.draw()\r\n        Platform.runLater(() => {\r\n          gui.display()\r\n        })\r\n      }

424
src\\main\\scala\\view\\UnoGUI.scala
view
$anon
Class
view.$anon
$anonfun
2313
2330
66
draw
Apply
false
0
false
controller.draw()

425
src\\main\\scala\\view\\UnoGUI.scala
view
$anon
Class
view.$anon
$anonfun
2340
2402
67
runLater
Apply
false
0
false
Platform.runLater(() => {\r\n          gui.display()\r\n        })

426
src\\main\\scala\\view\\UnoGUI.scala
view
$anon
Class
view.$anon
$anonfun
2377
2390
68
display
Apply
false
0
false
gui.display()

427
src\\main\\scala\\view\\UnoGUI.scala
view
$anon
Class
view.$anon
<init>
2498
3220
74
onAction_=
Apply
false
0
false
onAction = _ => {\r\n        val selectedCardIndex = handListView.selectionModel().getSelectedIndex\r\n        if (selectedCardIndex >= 0) {\r\n          val card = controller.field.players(controller.field.currentPlayer).hand.cards(selectedCardIndex)\r\n          if (controller.field.players(controller.field.currentPlayer).valid(card) && card.canBePlayedOn(controller.field.topCard)) {\r\n            controller.play(card)\r\n            Platform.runLater(() => {\r\n              gui.display()\r\n            })\r\n          } else {\r\n            showAlert("Invalid Move", "The selected card cannot be played.")\r\n          }\r\n        } else {\r\n          showAlert("No Card Selected", "Please select a card to play.")\r\n        }\r\n      }

428
src\\main\\scala\\view\\UnoGUI.scala
view
$anon
Class
view.$anon
$anonfun
2549
2595
75
getSelectedIndex
Apply
false
0
false
handListView.selectionModel().getSelectedIndex

429
src\\main\\scala\\view\\UnoGUI.scala
view
$anon
Class
view.$anon
$anonfun
2549
2578
75
apply
Apply
false
0
false
handListView.selectionModel()

430
src\\main\\scala\\view\\UnoGUI.scala
view
$anon
Class
view.$anon
$anonfun
2549
2576
75
selectionModel
Select
false
0
false
handListView.selectionModel

431
src\\main\\scala\\view\\UnoGUI.scala
view
$anon
Class
view.$anon
$anonfun
2657
2743
77
apply
Apply
false
0
false
controller.field.players(controller.field.currentPlayer).hand.cards(selectedCardIndex)

432
src\\main\\scala\\view\\UnoGUI.scala
view
$anon
Class
view.$anon
$anonfun
2657
2713
77
apply
Apply
false
0
false
controller.field.players(controller.field.currentPlayer)

433
src\\main\\scala\\view\\UnoGUI.scala
view
$anon
Class
view.$anon
$anonfun
2759
2827
78
valid
Apply
false
0
false
controller.field.players(controller.field.currentPlayer).valid(card)

434
src\\main\\scala\\view\\UnoGUI.scala
view
$anon
Class
view.$anon
$anonfun
2759
2815
78
apply
Apply
false
0
false
controller.field.players(controller.field.currentPlayer)

435
src\\main\\scala\\view\\UnoGUI.scala
view
$anon
Class
view.$anon
$anonfun
2831
2875
78
canBePlayedOn
Apply
false
0
false
card.canBePlayedOn(controller.field.topCard)

436
src\\main\\scala\\view\\UnoGUI.scala
view
$anon
Class
view.$anon
$anonfun
2892
2913
79
play
Apply
false
0
false
controller.play(card)

437
src\\main\\scala\\view\\UnoGUI.scala
view
$anon
Class
view.$anon
$anonfun
2927
2997
80
runLater
Apply
false
0
false
Platform.runLater(() => {\r\n              gui.display()\r\n            })

438
src\\main\\scala\\view\\UnoGUI.scala
view
$anon
Class
view.$anon
$anonfun
2968
2981
81
display
Apply
false
0
false
gui.display()

439
src\\main\\scala\\view\\UnoGUI.scala
view
$anon
Class
view.$anon
$anonfun
2877
3010
78
<none>
Block
true
0
false
{\r\n            controller.play(card)\r\n            Platform.runLater(() => {\r\n              gui.display()\r\n            })\r\n          }

440
src\\main\\scala\\view\\UnoGUI.scala
view
$anon
Class
view.$anon
$anonfun
3031
3095
84
showAlert
Apply
false
0
false
showAlert("Invalid Move", "The selected card cannot be played.")

441
src\\main\\scala\\view\\UnoGUI.scala
view
$anon
Class
view.$anon
$anonfun
3016
3108
83
<none>
Block
true
0
false
{\r\n            showAlert("Invalid Move", "The selected card cannot be played.")\r\n          }

442
src\\main\\scala\\view\\UnoGUI.scala
view
$anon
Class
view.$anon
$anonfun
2633
3119
76
<none>
Block
true
0
false
{\r\n          val card = controller.field.players(controller.field.currentPlayer).hand.cards(selectedCardIndex)\r\n          if (controller.field.players(controller.field.currentPlayer).valid(card) && card.canBePlayedOn(controller.field.topCard)) {\r\n            controller.play(card)\r\n            Platform.runLater(() => {\r\n              gui.display()\r\n            })\r\n          } else {\r\n            showAlert("Invalid Move", "The selected card cannot be played.")\r\n          }\r\n        }

443
src\\main\\scala\\view\\UnoGUI.scala
view
$anon
Class
view.$anon
$anonfun
3138
3200
87
showAlert
Apply
false
0
false
showAlert("No Card Selected", "Please select a card to play.")

444
src\\main\\scala\\view\\UnoGUI.scala
view
$anon
Class
view.$anon
$anonfun
3125
3211
86
<none>
Block
true
0
false
{\r\n          showAlert("No Card Selected", "Please select a card to play.")\r\n        }

445
src\\main\\scala\\view\\UnoGUI.scala
view
$anon
Class
view.$anon
<init>
3302
3403
93
onAction_=
Apply
false
0
false
onAction = _ => {\r\n        controller.undo()\r\n        Platform.runLater(() => gui.display())\r\n      }

446
src\\main\\scala\\view\\UnoGUI.scala
view
$anon
Class
view.$anon
$anonfun
3329
3346
94
undo
Apply
false
0
false
controller.undo()

447
src\\main\\scala\\view\\UnoGUI.scala
view
$anon
Class
view.$anon
$anonfun
3356
3394
95
runLater
Apply
false
0
false
Platform.runLater(() => gui.display())

448
src\\main\\scala\\view\\UnoGUI.scala
view
$anon
Class
view.$anon
$anonfun
3380
3393
95
display
Apply
false
0
false
gui.display()

449
src\\main\\scala\\view\\UnoGUI.scala
view
$anon
Class
view.$anon
<init>
3485
3586
100
onAction_=
Apply
false
0
false
onAction = _ => {\r\n        controller.redo()\r\n        Platform.runLater(() => gui.display())\r\n      }

450
src\\main\\scala\\view\\UnoGUI.scala
view
$anon
Class
view.$anon
$anonfun
3512
3529
101
redo
Apply
false
0
false
controller.redo()

451
src\\main\\scala\\view\\UnoGUI.scala
view
$anon
Class
view.$anon
$anonfun
3539
3577
102
runLater
Apply
false
0
false
Platform.runLater(() => gui.display())

452
src\\main\\scala\\view\\UnoGUI.scala
view
$anon
Class
view.$anon
$anonfun
3563
3576
102
display
Apply
false
0
false
gui.display()

453
src\\main\\scala\\view\\UnoGUI.scala
view
$anon
Class
view.$anon
<init>
3668
3767
107
onAction_=
Apply
false
0
false
onAction = _ => {\r\n        controller.notifyObservers(Event.Quit)\r\n        Platform.exit()\r\n      }

454
src\\main\\scala\\view\\UnoGUI.scala
view
$anon
Class
view.$anon
$anonfun
3695
3733
108
notifyObservers
Apply
false
0
false
controller.notifyObservers(Event.Quit)

455
src\\main\\scala\\view\\UnoGUI.scala
view
$anon
Class
view.$anon
$anonfun
3743
3758
109
exit
Apply
false
0
false
Platform.exit()

456
src\\main\\scala\\view\\UnoGUI.scala
view
$anon
Class
view.$anon
<init>
3840
3852
114
spacing_=
Apply
false
0
false
spacing = 10

457
src\\main\\scala\\view\\UnoGUI.scala
view
$anon
Class
view.$anon
<init>
3860
3934
115
children_=
Apply
false
0
false
children = Seq(drawButton, playButton, undoButton, redoButton, quitButton)

458
src\\main\\scala\\view\\UnoGUI.scala
view
$anon
Class
view.$anon
<init>
3871
3934
115
apply
Apply
false
0
false
Seq(drawButton, playButton, undoButton, redoButton, quitButton)

459
src\\main\\scala\\view\\UnoGUI.scala
view
$anon
Class
view.$anon
<init>
3871
3874
115
Seq
Ident
false
0
false
Seq

460
src\\main\\scala\\view\\UnoGUI.scala
view
$anon
Class
view.$anon
<init>
4001
4013
119
spacing_=
Apply
false
0
false
spacing = 20

461
src\\main\\scala\\view\\UnoGUI.scala
view
$anon
Class
view.$anon
<init>
4021
4100
120
children_=
Apply
false
0
false
children = Seq(playerLabel, topCardLabel, handListView, drawButton, playButton)

462
src\\main\\scala\\view\\UnoGUI.scala
view
$anon
Class
view.$anon
<init>
4032
4100
120
apply
Apply
false
0
false
Seq(playerLabel, topCardLabel, handListView, drawButton, playButton)

463
src\\main\\scala\\view\\UnoGUI.scala
view
$anon
Class
view.$anon
<init>
4032
4035
120
Seq
Ident
false
0
false
Seq

464
src\\main\\scala\\view\\UnoGUI.scala
view
GameState
Class
view.GameState
display
4113
4138
122
add
Apply
false
0
false
pane.children.add(layout)

465
src\\main\\scala\\view\\UnoGUI.scala
view
GameState
Class
view.GameState
display
4113
4126
122
observableBuffer2ObservableList
Apply
false
0
false
pane.children

466
src\\main\\scala\\view\\UnoGUI.scala
view
GameState
Class
view.GameState
display
4113
4126
122
children
Select
false
0
false
pane.children

467
src\\main\\scala\\view\\UnoGUI.scala
view
GameState
Class
view.GameState
display
4131
4137
122
sfxVBox2jfx
Apply
false
0
false
layout

468
src\\main\\scala\\view\\UnoGUI.scala
view
GameState
Class
view.GameState
display
1195
1215
40
display
DefDef
false
0
false
override def display

469
src\\main\\scala\\view\\UnoGUI.scala
view
GameState
Class
view.GameState
showAlert
4223
4441
131
showAndWait
Apply
false
0
false
new scalafx.scene.control.Alert(scalafx.scene.control.Alert.AlertType.Information) {\r\n      initOwner(gui.stage)\r\n      this.title = alertTitle\r\n      headerText = None\r\n      contentText = message\r\n    }.showAndWait()

470
src\\main\\scala\\view\\UnoGUI.scala
view
$anon
Class
view.$anon
<init>
4315
4335
127
initOwner
Apply
false
0
false
initOwner(gui.stage)

471
src\\main\\scala\\view\\UnoGUI.scala
view
$anon
Class
view.$anon
<init>
4343
4366
128
title_=
Apply
false
0
false
this.title = alertTitle

472
src\\main\\scala\\view\\UnoGUI.scala
view
$anon
Class
view.$anon
<init>
4374
4391
129
headerText_=
Apply
false
0
false
headerText = None

473
src\\main\\scala\\view\\UnoGUI.scala
view
$anon
Class
view.$anon
<init>
4399
4420
130
contentText_=
Apply
false
0
false
contentText = message

474
src\\main\\scala\\view\\UnoGUI.scala
view
GameState
Class
view.GameState
showAlert
4149
4170
125
showAlert
DefDef
false
0
false
private def showAlert

475
src\\main\\scala\\view\\UnoGUI.scala
view
UnoGUI
Class
view.UnoGUI
<init>
4528
4548
136
add
Apply
false
0
false
controller.add(this)

476
src\\main\\scala\\view\\UnoGUI.scala
view
UnoGUI
Class
view.UnoGUI
<init>
4581
4613
138
<init>
Apply
false
0
false
new BeginState(this, controller)

477
src\\main\\scala\\view\\UnoGUI.scala
view
UnoGUI
Class
view.UnoGUI
<init>
4646
4654
139
<init>
Apply
false
0
false
new Pane

478
src\\main\\scala\\view\\UnoGUI.scala
view
UnoGUI
Class
view.UnoGUI
<init>
4650
4654
139
$lessinit$greater$default$1
Select
false
0
false
Pane

479
src\\main\\scala\\view\\UnoGUI.scala
view
UnoGUI
Class
view.UnoGUI
<init>
4687
4695
140
<init>
Apply
false
0
false
new Pane

480
src\\main\\scala\\view\\UnoGUI.scala
view
UnoGUI
Class
view.UnoGUI
<init>
4691
4695
140
$lessinit$greater$default$1
Select
false
0
false
Pane

481
src\\main\\scala\\view\\UnoGUI.scala
view
$anon
Class
view.$anon
<init>
4737
4746
141
$lessinit$greater$default$1
Select
false
0
false
StackPane

482
src\\main\\scala\\view\\UnoGUI.scala
view
$anon
Class
view.$anon
<init>
4754
4789
142
children_=
Apply
false
0
false
children = List(menuPane, gamePane)

483
src\\main\\scala\\view\\UnoGUI.scala
view
$anon
Class
view.$anon
<init>
4765
4789
142
apply
Apply
false
0
false
List(menuPane, gamePane)

484
src\\main\\scala\\view\\UnoGUI.scala
view
$anon
Class
view.$anon
<init>
4765
4769
142
List
Ident
false
0
false
List

485
src\\main\\scala\\view\\UnoGUI.scala
view
UnoGUI
Class
view.UnoGUI
setState
4800
4812
145
setState
DefDef
false
0
false
def setState

486
src\\main\\scala\\view\\UnoGUI.scala
view
UnoGUI
Class
view.UnoGUI
display
4901
4924
150
display
Apply
false
0
false
state.display(gamePane)

487
src\\main\\scala\\view\\UnoGUI.scala
view
UnoGUI
Class
view.UnoGUI
display
4930
4948
151
toFront
Apply
false
0
false
gamePane.toFront()

488
src\\main\\scala\\view\\UnoGUI.scala
view
UnoGUI
Class
view.UnoGUI
display
4872
4883
149
display
DefDef
false
0
false
def display

489
src\\main\\scala\\view\\UnoGUI.scala
view
UnoGUI
Class
view.UnoGUI
start
4995
5024
155
setGuiActive
Apply
false
0
false
controller.setGuiActive(true)

490
src\\main\\scala\\view\\UnoGUI.scala
view
$anon
Class
view.$anon
<init>
5071
5089
157
title_=
Apply
false
0
false
title = "Uno Game"

491
src\\main\\scala\\view\\UnoGUI.scala
view
$anon
Class
view.$anon
<init>
5097
5108
158
width_=
Apply
false
0
false
width = 800

492
src\\main\\scala\\view\\UnoGUI.scala
view
$anon
Class
view.$anon
<init>
5116
5128
159
height_=
Apply
false
0
false
height = 600

493
src\\main\\scala\\view\\UnoGUI.scala
view
$anon
Class
view.$anon
<init>
5136
5219
160
scene_=
Apply
false
0
false
scene = new Scene {\r\n        fill = Color.Pink\r\n        content = rootPane\r\n      }

494
src\\main\\scala\\view\\UnoGUI.scala
view
$anon
Class
view.$anon
<init>
5148
5153
160
$lessinit$greater$default$1
Select
false
0
false
Scene

495
src\\main\\scala\\view\\UnoGUI.scala
view
$anon
Class
view.$anon
<init>
5165
5182
161
fill_=
Apply
false
0
false
fill = Color.Pink

496
src\\main\\scala\\view\\UnoGUI.scala
view
$anon
Class
view.$anon
<init>
5192
5210
162
content_=
Apply
false
0
false
content = rootPane

497
src\\main\\scala\\view\\UnoGUI.scala
view
UnoGUI
Class
view.UnoGUI
start
5232
5275
165
onKeyPressed_=
Apply
false
0
false
stage.scene().onKeyPressed = handleKeyPress

498
src\\main\\scala\\view\\UnoGUI.scala
view
UnoGUI
Class
view.UnoGUI
start
5232
5245
165
jfxScene2sfx
Apply
false
0
false
stage.scene()

499
src\\main\\scala\\view\\UnoGUI.scala
view
UnoGUI
Class
view.UnoGUI
start
5232
5245
165
apply
Apply
false
0
false
stage.scene()

500
src\\main\\scala\\view\\UnoGUI.scala
view
UnoGUI
Class
view.UnoGUI
start
5232
5243
165
scene
Select
false
0
false
stage.scene

501
src\\main\\scala\\view\\UnoGUI.scala
view
UnoGUI
Class
view.UnoGUI
start
5261
5275
165
eventClosureWrapperWithParam
Apply
false
0
false
handleKeyPress

502
src\\main\\scala\\view\\UnoGUI.scala
view
UnoGUI
Class
view.UnoGUI
start
5261
5275
165
handleKeyPress
Select
false
0
false
handleKeyPress

503
src\\main\\scala\\view\\UnoGUI.scala
view
UnoGUI
Class
view.UnoGUI
start
5281
5290
166
display
Apply
false
0
false
display()

504
src\\main\\scala\\view\\UnoGUI.scala
view
UnoGUI
Class
view.UnoGUI
start
4959
4977
154
start
DefDef
false
0
false
override def start

505
src\\main\\scala\\view\\UnoGUI.scala
view
UnoGUI
Class
view.UnoGUI
$anonfun
5376
5383
170
code
Select
false
0
false
ke.code

506
src\\main\\scala\\view\\UnoGUI.scala
view
UnoGUI
Class
view.UnoGUI
$anonfun
5355
5399
170
<none>
Block
false
0
false
case ke: KeyEvent if ke.code == KeyCode.Left

507
src\\main\\scala\\view\\UnoGUI.scala
view
UnoGUI
Class
view.UnoGUI
$anonfun
5418
5450
171
<init>
Apply
false
0
false
new BeginState(this, controller)

508
src\\main\\scala\\view\\UnoGUI.scala
view
UnoGUI
Class
view.UnoGUI
$anonfun
5458
5467
172
display
Apply
false
0
false
display()

509
src\\main\\scala\\view\\UnoGUI.scala
view
UnoGUI
Class
view.UnoGUI
$anonfun
5473
5479
173
<none>
Block
false
0
false
case _

510
src\\main\\scala\\view\\UnoGUI.scala
view
UnoGUI
Class
view.UnoGUI
handleKeyPress
5301
5327
169
handleKeyPress
DefDef
false
0
false
private def handleKeyPress

511
src\\main\\scala\\view\\UnoGUI.scala
view
UnoGUI
Class
view.UnoGUI
update
5538
5572
177
println
Apply
false
0
false
println(s"GUI Received event: $e")

512
src\\main\\scala\\view\\UnoGUI.scala
view
UnoGUI
Class
view.UnoGUI
update
5546
5571
177
s
Apply
false
0
false
s"GUI Received event: $e"

513
src\\main\\scala\\view\\UnoGUI.scala
view
UnoGUI
Class
view.UnoGUI
update
5595
5611
179
<none>
Block
false
0
false
case Event.Start

514
src\\main\\scala\\view\\UnoGUI.scala
view
UnoGUI
Class
view.UnoGUI
update
5624
5733
180
runLater
Apply
false
0
false
Platform.runLater(() => {\r\n          state = new GameState(this, controller)\r\n          display()\r\n        })

515
src\\main\\scala\\view\\UnoGUI.scala
view
UnoGUI
Class
view.UnoGUI
$anonfun
5669
5700
181
<init>
Apply
false
0
false
new GameState(this, controller)

516
src\\main\\scala\\view\\UnoGUI.scala
view
UnoGUI
Class
view.UnoGUI
$anonfun
5712
5721
182
display
Apply
false
0
false
display()

517
src\\main\\scala\\view\\UnoGUI.scala
view
UnoGUI
Class
view.UnoGUI
update
5741
5809
184
<none>
Block
false
0
false
case Event.Play | Event.Draw | Event.Undo | Event.Redo | Event.Error

518
src\\main\\scala\\view\\UnoGUI.scala
view
UnoGUI
Class
view.UnoGUI
update
5822
5920
185
runLater
Apply
false
0
false
Platform.runLater(() => {\r\n          state.display(gamePane) // Refresh the game state\r\n        })

519
src\\main\\scala\\view\\UnoGUI.scala
view
UnoGUI
Class
view.UnoGUI
$anonfun
5859
5882
186
display
Apply
false
0
false
state.display(gamePane)

520
src\\main\\scala\\view\\UnoGUI.scala
view
UnoGUI
Class
view.UnoGUI
update
5928
5943
188
<none>
Block
false
0
false
case Event.Quit

521
src\\main\\scala\\view\\UnoGUI.scala
view
UnoGUI
Class
view.UnoGUI
update
5956
5971
189
exit
Apply
false
0
false
Platform.exit()

522
src\\main\\scala\\view\\UnoGUI.scala
view
UnoGUI
Class
view.UnoGUI
update
5493
5512
176
update
DefDef
false
0
false
override def update

523
src\\main\\scala\\view\\UnoGUI.scala
view
UnoGUI$
Object
view.UnoGUI$
launchApp
6065
6105
196
main
Apply
false
0
false
new UnoGUI(controller).main(Array.empty)

524
src\\main\\scala\\view\\UnoGUI.scala
view
UnoGUI$
Object
view.UnoGUI$
launchApp
6065
6087
196
<init>
Apply
false
0
false
new UnoGUI(controller)

525
src\\main\\scala\\view\\UnoGUI.scala
view
UnoGUI$
Object
view.UnoGUI$
launchApp
6093
6104
196
empty
Apply
false
0
false
Array.empty

526
src\\main\\scala\\view\\UnoGUI.scala
view
UnoGUI$
Object
view.UnoGUI$
launchApp
6009
6022
195
launchApp
DefDef
false
0
false
def launchApp

